

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sat May 26 14:05:37 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F18855
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	stringtext2,global,class=STRCODE,delta=2
     6                           	psect	stringtext3,global,class=STRCODE,delta=2
     7                           	psect	stringtext4,global,class=STRCODE,delta=2
     8                           	psect	stringtext5,global,class=STRCODE,delta=2
     9                           	psect	stringtext6,global,class=STRCODE,delta=2
    10                           	psect	cinit,global,class=CODE,merge=1,delta=2
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	intentry,global,class=CODE,delta=2
    28                           	dabs	1,0x7E,2
    29  0000                     
    30                           ; Version 1.45
    31                           ; Generated 16/11/2017 GMT
    32                           ; 
    33                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC16F18855 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64  0000                     	;# 
    65  0001                     	;# 
    66  0002                     	;# 
    67  0003                     	;# 
    68  0004                     	;# 
    69  0005                     	;# 
    70  0006                     	;# 
    71  0007                     	;# 
    72  0008                     	;# 
    73  0009                     	;# 
    74  000A                     	;# 
    75  000B                     	;# 
    76  000C                     	;# 
    77  000D                     	;# 
    78  000E                     	;# 
    79  0010                     	;# 
    80  0011                     	;# 
    81  0012                     	;# 
    82  0013                     	;# 
    83  0016                     	;# 
    84  0017                     	;# 
    85  0018                     	;# 
    86  001C                     	;# 
    87  001C                     	;# 
    88  001D                     	;# 
    89  001D                     	;# 
    90  001E                     	;# 
    91  001F                     	;# 
    92  008C                     	;# 
    93  008C                     	;# 
    94  008D                     	;# 
    95  008E                     	;# 
    96  008E                     	;# 
    97  008F                     	;# 
    98  0090                     	;# 
    99  0090                     	;# 
   100  0091                     	;# 
   101  0093                     	;# 
   102  0094                     	;# 
   103  0095                     	;# 
   104  0096                     	;# 
   105  0097                     	;# 
   106  0098                     	;# 
   107  0099                     	;# 
   108  009A                     	;# 
   109  009B                     	;# 
   110  009C                     	;# 
   111  009D                     	;# 
   112  009E                     	;# 
   113  010C                     	;# 
   114  010D                     	;# 
   115  010E                     	;# 
   116  010E                     	;# 
   117  010F                     	;# 
   118  0110                     	;# 
   119  0110                     	;# 
   120  0111                     	;# 
   121  0112                     	;# 
   122  0112                     	;# 
   123  0113                     	;# 
   124  0114                     	;# 
   125  0114                     	;# 
   126  0115                     	;# 
   127  0116                     	;# 
   128  0116                     	;# 
   129  0117                     	;# 
   130  0119                     	;# 
   131  0119                     	;# 
   132  0119                     	;# 
   133  011A                     	;# 
   134  011A                     	;# 
   135  011A                     	;# 
   136  011B                     	;# 
   137  011B                     	;# 
   138  011B                     	;# 
   139  011B                     	;# 
   140  011B                     	;# 
   141  011C                     	;# 
   142  011C                     	;# 
   143  011C                     	;# 
   144  011D                     	;# 
   145  011D                     	;# 
   146  011D                     	;# 
   147  011E                     	;# 
   148  011E                     	;# 
   149  011E                     	;# 
   150  011F                     	;# 
   151  011F                     	;# 
   152  011F                     	;# 
   153  011F                     	;# 
   154  011F                     	;# 
   155  018C                     	;# 
   156  018D                     	;# 
   157  018E                     	;# 
   158  018F                     	;# 
   159  0190                     	;# 
   160  0191                     	;# 
   161  0192                     	;# 
   162  0196                     	;# 
   163  0197                     	;# 
   164  0198                     	;# 
   165  0199                     	;# 
   166  019A                     	;# 
   167  019B                     	;# 
   168  019C                     	;# 
   169  020C                     	;# 
   170  020C                     	;# 
   171  020D                     	;# 
   172  020E                     	;# 
   173  020F                     	;# 
   174  020F                     	;# 
   175  0210                     	;# 
   176  0210                     	;# 
   177  0211                     	;# 
   178  0211                     	;# 
   179  0212                     	;# 
   180  0212                     	;# 
   181  0213                     	;# 
   182  0214                     	;# 
   183  0215                     	;# 
   184  0215                     	;# 
   185  0216                     	;# 
   186  0216                     	;# 
   187  0217                     	;# 
   188  0217                     	;# 
   189  0218                     	;# 
   190  0218                     	;# 
   191  0219                     	;# 
   192  021A                     	;# 
   193  021B                     	;# 
   194  021B                     	;# 
   195  021C                     	;# 
   196  021C                     	;# 
   197  021D                     	;# 
   198  021D                     	;# 
   199  021E                     	;# 
   200  021F                     	;# 
   201  028C                     	;# 
   202  028C                     	;# 
   203  028D                     	;# 
   204  028D                     	;# 
   205  028E                     	;# 
   206  028F                     	;# 
   207  0290                     	;# 
   208  0290                     	;# 
   209  0291                     	;# 
   210  0292                     	;# 
   211  0292                     	;# 
   212  0293                     	;# 
   213  0293                     	;# 
   214  0294                     	;# 
   215  0295                     	;# 
   216  0296                     	;# 
   217  0296                     	;# 
   218  0297                     	;# 
   219  0298                     	;# 
   220  0298                     	;# 
   221  0299                     	;# 
   222  0299                     	;# 
   223  029A                     	;# 
   224  029B                     	;# 
   225  029C                     	;# 
   226  029C                     	;# 
   227  029D                     	;# 
   228  030C                     	;# 
   229  030C                     	;# 
   230  030D                     	;# 
   231  030E                     	;# 
   232  030F                     	;# 
   233  0310                     	;# 
   234  0310                     	;# 
   235  0311                     	;# 
   236  0312                     	;# 
   237  0313                     	;# 
   238  0314                     	;# 
   239  0314                     	;# 
   240  0315                     	;# 
   241  0316                     	;# 
   242  0317                     	;# 
   243  0318                     	;# 
   244  0318                     	;# 
   245  0319                     	;# 
   246  031A                     	;# 
   247  031B                     	;# 
   248  031C                     	;# 
   249  031C                     	;# 
   250  031D                     	;# 
   251  031E                     	;# 
   252  031F                     	;# 
   253  038C                     	;# 
   254  038D                     	;# 
   255  038E                     	;# 
   256  0390                     	;# 
   257  0391                     	;# 
   258  0392                     	;# 
   259  040C                     	;# 
   260  040D                     	;# 
   261  040E                     	;# 
   262  040F                     	;# 
   263  0410                     	;# 
   264  0411                     	;# 
   265  0416                     	;# 
   266  0416                     	;# 
   267  0417                     	;# 
   268  0418                     	;# 
   269  0418                     	;# 
   270  0419                     	;# 
   271  041A                     	;# 
   272  041A                     	;# 
   273  041B                     	;# 
   274  041C                     	;# 
   275  041C                     	;# 
   276  041D                     	;# 
   277  041E                     	;# 
   278  041F                     	;# 
   279  048C                     	;# 
   280  048C                     	;# 
   281  048D                     	;# 
   282  048E                     	;# 
   283  048F                     	;# 
   284  048F                     	;# 
   285  0490                     	;# 
   286  0491                     	;# 
   287  0492                     	;# 
   288  0492                     	;# 
   289  0493                     	;# 
   290  0494                     	;# 
   291  0495                     	;# 
   292  0495                     	;# 
   293  0496                     	;# 
   294  0497                     	;# 
   295  0498                     	;# 
   296  0499                     	;# 
   297  049A                     	;# 
   298  049B                     	;# 
   299  049C                     	;# 
   300  049D                     	;# 
   301  050C                     	;# 
   302  050C                     	;# 
   303  050D                     	;# 
   304  050E                     	;# 
   305  050F                     	;# 
   306  050F                     	;# 
   307  0510                     	;# 
   308  0511                     	;# 
   309  0512                     	;# 
   310  0512                     	;# 
   311  0513                     	;# 
   312  0514                     	;# 
   313  0515                     	;# 
   314  0515                     	;# 
   315  0516                     	;# 
   316  0517                     	;# 
   317  0518                     	;# 
   318  0519                     	;# 
   319  051A                     	;# 
   320  051B                     	;# 
   321  051C                     	;# 
   322  051D                     	;# 
   323  058C                     	;# 
   324  058C                     	;# 
   325  058D                     	;# 
   326  058E                     	;# 
   327  058F                     	;# 
   328  058F                     	;# 
   329  0590                     	;# 
   330  0591                     	;# 
   331  0592                     	;# 
   332  0593                     	;# 
   333  060C                     	;# 
   334  060D                     	;# 
   335  060E                     	;# 
   336  060F                     	;# 
   337  0610                     	;# 
   338  0611                     	;# 
   339  0612                     	;# 
   340  0613                     	;# 
   341  0614                     	;# 
   342  0616                     	;# 
   343  0617                     	;# 
   344  0618                     	;# 
   345  0619                     	;# 
   346  061A                     	;# 
   347  061B                     	;# 
   348  061C                     	;# 
   349  061D                     	;# 
   350  061E                     	;# 
   351  068C                     	;# 
   352  068D                     	;# 
   353  068E                     	;# 
   354  068F                     	;# 
   355  0690                     	;# 
   356  0691                     	;# 
   357  0692                     	;# 
   358  0693                     	;# 
   359  0694                     	;# 
   360  070C                     	;# 
   361  070D                     	;# 
   362  070E                     	;# 
   363  070F                     	;# 
   364  0710                     	;# 
   365  0711                     	;# 
   366  0712                     	;# 
   367  0713                     	;# 
   368  0714                     	;# 
   369  0716                     	;# 
   370  0717                     	;# 
   371  0718                     	;# 
   372  0719                     	;# 
   373  071A                     	;# 
   374  071B                     	;# 
   375  071C                     	;# 
   376  071D                     	;# 
   377  071E                     	;# 
   378  0796                     	;# 
   379  0797                     	;# 
   380  0798                     	;# 
   381  0799                     	;# 
   382  079A                     	;# 
   383  079B                     	;# 
   384  080C                     	;# 
   385  080D                     	;# 
   386  080E                     	;# 
   387  080F                     	;# 
   388  0810                     	;# 
   389  0811                     	;# 
   390  0812                     	;# 
   391  0813                     	;# 
   392  0814                     	;# 
   393  081A                     	;# 
   394  081B                     	;# 
   395  081C                     	;# 
   396  081D                     	;# 
   397  081E                     	;# 
   398  081F                     	;# 
   399  088C                     	;# 
   400  088D                     	;# 
   401  088E                     	;# 
   402  088F                     	;# 
   403  0890                     	;# 
   404  0891                     	;# 
   405  0892                     	;# 
   406  0893                     	;# 
   407  0895                     	;# 
   408  0896                     	;# 
   409  0897                     	;# 
   410  0898                     	;# 
   411  0899                     	;# 
   412  089A                     	;# 
   413  089B                     	;# 
   414  090C                     	;# 
   415  090E                     	;# 
   416  090F                     	;# 
   417  091F                     	;# 
   418  091F                     	;# 
   419  098F                     	;# 
   420  098F                     	;# 
   421  0990                     	;# 
   422  0991                     	;# 
   423  0992                     	;# 
   424  0993                     	;# 
   425  0994                     	;# 
   426  0995                     	;# 
   427  0996                     	;# 
   428  0997                     	;# 
   429  0E0F                     	;# 
   430  0E10                     	;# 
   431  0E11                     	;# 
   432  0E12                     	;# 
   433  0E13                     	;# 
   434  0E14                     	;# 
   435  0E15                     	;# 
   436  0E16                     	;# 
   437  0E17                     	;# 
   438  0E18                     	;# 
   439  0E19                     	;# 
   440  0E1A                     	;# 
   441  0E1B                     	;# 
   442  0E1C                     	;# 
   443  0E1D                     	;# 
   444  0E1E                     	;# 
   445  0E1F                     	;# 
   446  0E20                     	;# 
   447  0E21                     	;# 
   448  0E22                     	;# 
   449  0E23                     	;# 
   450  0E24                     	;# 
   451  0E25                     	;# 
   452  0E26                     	;# 
   453  0E27                     	;# 
   454  0E28                     	;# 
   455  0E29                     	;# 
   456  0E2A                     	;# 
   457  0E2B                     	;# 
   458  0E2C                     	;# 
   459  0E2D                     	;# 
   460  0E2E                     	;# 
   461  0E2F                     	;# 
   462  0E30                     	;# 
   463  0E31                     	;# 
   464  0E32                     	;# 
   465  0E33                     	;# 
   466  0E34                     	;# 
   467  0E35                     	;# 
   468  0E36                     	;# 
   469  0E37                     	;# 
   470  0E8F                     	;# 
   471  0E90                     	;# 
   472  0E91                     	;# 
   473  0E92                     	;# 
   474  0E93                     	;# 
   475  0E94                     	;# 
   476  0E95                     	;# 
   477  0E96                     	;# 
   478  0E97                     	;# 
   479  0E9C                     	;# 
   480  0E9D                     	;# 
   481  0E9E                     	;# 
   482  0EA1                     	;# 
   483  0EA2                     	;# 
   484  0EA3                     	;# 
   485  0EA4                     	;# 
   486  0EA5                     	;# 
   487  0EA9                     	;# 
   488  0EAA                     	;# 
   489  0EAB                     	;# 
   490  0EAC                     	;# 
   491  0EB1                     	;# 
   492  0EB2                     	;# 
   493  0EB3                     	;# 
   494  0EB8                     	;# 
   495  0EB9                     	;# 
   496  0EBA                     	;# 
   497  0EBB                     	;# 
   498  0EBC                     	;# 
   499  0EBD                     	;# 
   500  0EBE                     	;# 
   501  0EC3                     	;# 
   502  0EC5                     	;# 
   503  0EC6                     	;# 
   504  0EC7                     	;# 
   505  0EC8                     	;# 
   506  0EC9                     	;# 
   507  0ECA                     	;# 
   508  0ECB                     	;# 
   509  0ECC                     	;# 
   510  0F10                     	;# 
   511  0F11                     	;# 
   512  0F12                     	;# 
   513  0F13                     	;# 
   514  0F14                     	;# 
   515  0F15                     	;# 
   516  0F16                     	;# 
   517  0F17                     	;# 
   518  0F18                     	;# 
   519  0F19                     	;# 
   520  0F1A                     	;# 
   521  0F1B                     	;# 
   522  0F1C                     	;# 
   523  0F1D                     	;# 
   524  0F1E                     	;# 
   525  0F1F                     	;# 
   526  0F20                     	;# 
   527  0F21                     	;# 
   528  0F22                     	;# 
   529  0F23                     	;# 
   530  0F24                     	;# 
   531  0F25                     	;# 
   532  0F26                     	;# 
   533  0F27                     	;# 
   534  0F38                     	;# 
   535  0F39                     	;# 
   536  0F3A                     	;# 
   537  0F3B                     	;# 
   538  0F3C                     	;# 
   539  0F3D                     	;# 
   540  0F3E                     	;# 
   541  0F3F                     	;# 
   542  0F40                     	;# 
   543  0F41                     	;# 
   544  0F43                     	;# 
   545  0F44                     	;# 
   546  0F45                     	;# 
   547  0F46                     	;# 
   548  0F47                     	;# 
   549  0F48                     	;# 
   550  0F49                     	;# 
   551  0F4A                     	;# 
   552  0F4B                     	;# 
   553  0F4C                     	;# 
   554  0F4E                     	;# 
   555  0F4F                     	;# 
   556  0F50                     	;# 
   557  0F51                     	;# 
   558  0F52                     	;# 
   559  0F53                     	;# 
   560  0F54                     	;# 
   561  0F55                     	;# 
   562  0F56                     	;# 
   563  0F57                     	;# 
   564  0F65                     	;# 
   565  0F68                     	;# 
   566  0F69                     	;# 
   567  0F6A                     	;# 
   568  0F6B                     	;# 
   569  0FE4                     	;# 
   570  0FE5                     	;# 
   571  0FE6                     	;# 
   572  0FE7                     	;# 
   573  0FE8                     	;# 
   574  0FE9                     	;# 
   575  0FEA                     	;# 
   576  0FEB                     	;# 
   577  0FED                     	;# 
   578  0FEE                     	;# 
   579  0FEF                     	;# 
   580  0000                     	;# 
   581  0001                     	;# 
   582  0002                     	;# 
   583  0003                     	;# 
   584  0004                     	;# 
   585  0005                     	;# 
   586  0006                     	;# 
   587  0007                     	;# 
   588  0008                     	;# 
   589  0009                     	;# 
   590  000A                     	;# 
   591  000B                     	;# 
   592  000C                     	;# 
   593  000D                     	;# 
   594  000E                     	;# 
   595  0010                     	;# 
   596  0011                     	;# 
   597  0012                     	;# 
   598  0013                     	;# 
   599  0016                     	;# 
   600  0017                     	;# 
   601  0018                     	;# 
   602  001C                     	;# 
   603  001C                     	;# 
   604  001D                     	;# 
   605  001D                     	;# 
   606  001E                     	;# 
   607  001F                     	;# 
   608  008C                     	;# 
   609  008C                     	;# 
   610  008D                     	;# 
   611  008E                     	;# 
   612  008E                     	;# 
   613  008F                     	;# 
   614  0090                     	;# 
   615  0090                     	;# 
   616  0091                     	;# 
   617  0093                     	;# 
   618  0094                     	;# 
   619  0095                     	;# 
   620  0096                     	;# 
   621  0097                     	;# 
   622  0098                     	;# 
   623  0099                     	;# 
   624  009A                     	;# 
   625  009B                     	;# 
   626  009C                     	;# 
   627  009D                     	;# 
   628  009E                     	;# 
   629  010C                     	;# 
   630  010D                     	;# 
   631  010E                     	;# 
   632  010E                     	;# 
   633  010F                     	;# 
   634  0110                     	;# 
   635  0110                     	;# 
   636  0111                     	;# 
   637  0112                     	;# 
   638  0112                     	;# 
   639  0113                     	;# 
   640  0114                     	;# 
   641  0114                     	;# 
   642  0115                     	;# 
   643  0116                     	;# 
   644  0116                     	;# 
   645  0117                     	;# 
   646  0119                     	;# 
   647  0119                     	;# 
   648  0119                     	;# 
   649  011A                     	;# 
   650  011A                     	;# 
   651  011A                     	;# 
   652  011B                     	;# 
   653  011B                     	;# 
   654  011B                     	;# 
   655  011B                     	;# 
   656  011B                     	;# 
   657  011C                     	;# 
   658  011C                     	;# 
   659  011C                     	;# 
   660  011D                     	;# 
   661  011D                     	;# 
   662  011D                     	;# 
   663  011E                     	;# 
   664  011E                     	;# 
   665  011E                     	;# 
   666  011F                     	;# 
   667  011F                     	;# 
   668  011F                     	;# 
   669  011F                     	;# 
   670  011F                     	;# 
   671  018C                     	;# 
   672  018D                     	;# 
   673  018E                     	;# 
   674  018F                     	;# 
   675  0190                     	;# 
   676  0191                     	;# 
   677  0192                     	;# 
   678  0196                     	;# 
   679  0197                     	;# 
   680  0198                     	;# 
   681  0199                     	;# 
   682  019A                     	;# 
   683  019B                     	;# 
   684  019C                     	;# 
   685  020C                     	;# 
   686  020C                     	;# 
   687  020D                     	;# 
   688  020E                     	;# 
   689  020F                     	;# 
   690  020F                     	;# 
   691  0210                     	;# 
   692  0210                     	;# 
   693  0211                     	;# 
   694  0211                     	;# 
   695  0212                     	;# 
   696  0212                     	;# 
   697  0213                     	;# 
   698  0214                     	;# 
   699  0215                     	;# 
   700  0215                     	;# 
   701  0216                     	;# 
   702  0216                     	;# 
   703  0217                     	;# 
   704  0217                     	;# 
   705  0218                     	;# 
   706  0218                     	;# 
   707  0219                     	;# 
   708  021A                     	;# 
   709  021B                     	;# 
   710  021B                     	;# 
   711  021C                     	;# 
   712  021C                     	;# 
   713  021D                     	;# 
   714  021D                     	;# 
   715  021E                     	;# 
   716  021F                     	;# 
   717  028C                     	;# 
   718  028C                     	;# 
   719  028D                     	;# 
   720  028D                     	;# 
   721  028E                     	;# 
   722  028F                     	;# 
   723  0290                     	;# 
   724  0290                     	;# 
   725  0291                     	;# 
   726  0292                     	;# 
   727  0292                     	;# 
   728  0293                     	;# 
   729  0293                     	;# 
   730  0294                     	;# 
   731  0295                     	;# 
   732  0296                     	;# 
   733  0296                     	;# 
   734  0297                     	;# 
   735  0298                     	;# 
   736  0298                     	;# 
   737  0299                     	;# 
   738  0299                     	;# 
   739  029A                     	;# 
   740  029B                     	;# 
   741  029C                     	;# 
   742  029C                     	;# 
   743  029D                     	;# 
   744  030C                     	;# 
   745  030C                     	;# 
   746  030D                     	;# 
   747  030E                     	;# 
   748  030F                     	;# 
   749  0310                     	;# 
   750  0310                     	;# 
   751  0311                     	;# 
   752  0312                     	;# 
   753  0313                     	;# 
   754  0314                     	;# 
   755  0314                     	;# 
   756  0315                     	;# 
   757  0316                     	;# 
   758  0317                     	;# 
   759  0318                     	;# 
   760  0318                     	;# 
   761  0319                     	;# 
   762  031A                     	;# 
   763  031B                     	;# 
   764  031C                     	;# 
   765  031C                     	;# 
   766  031D                     	;# 
   767  031E                     	;# 
   768  031F                     	;# 
   769  038C                     	;# 
   770  038D                     	;# 
   771  038E                     	;# 
   772  0390                     	;# 
   773  0391                     	;# 
   774  0392                     	;# 
   775  040C                     	;# 
   776  040D                     	;# 
   777  040E                     	;# 
   778  040F                     	;# 
   779  0410                     	;# 
   780  0411                     	;# 
   781  0416                     	;# 
   782  0416                     	;# 
   783  0417                     	;# 
   784  0418                     	;# 
   785  0418                     	;# 
   786  0419                     	;# 
   787  041A                     	;# 
   788  041A                     	;# 
   789  041B                     	;# 
   790  041C                     	;# 
   791  041C                     	;# 
   792  041D                     	;# 
   793  041E                     	;# 
   794  041F                     	;# 
   795  048C                     	;# 
   796  048C                     	;# 
   797  048D                     	;# 
   798  048E                     	;# 
   799  048F                     	;# 
   800  048F                     	;# 
   801  0490                     	;# 
   802  0491                     	;# 
   803  0492                     	;# 
   804  0492                     	;# 
   805  0493                     	;# 
   806  0494                     	;# 
   807  0495                     	;# 
   808  0495                     	;# 
   809  0496                     	;# 
   810  0497                     	;# 
   811  0498                     	;# 
   812  0499                     	;# 
   813  049A                     	;# 
   814  049B                     	;# 
   815  049C                     	;# 
   816  049D                     	;# 
   817  050C                     	;# 
   818  050C                     	;# 
   819  050D                     	;# 
   820  050E                     	;# 
   821  050F                     	;# 
   822  050F                     	;# 
   823  0510                     	;# 
   824  0511                     	;# 
   825  0512                     	;# 
   826  0512                     	;# 
   827  0513                     	;# 
   828  0514                     	;# 
   829  0515                     	;# 
   830  0515                     	;# 
   831  0516                     	;# 
   832  0517                     	;# 
   833  0518                     	;# 
   834  0519                     	;# 
   835  051A                     	;# 
   836  051B                     	;# 
   837  051C                     	;# 
   838  051D                     	;# 
   839  058C                     	;# 
   840  058C                     	;# 
   841  058D                     	;# 
   842  058E                     	;# 
   843  058F                     	;# 
   844  058F                     	;# 
   845  0590                     	;# 
   846  0591                     	;# 
   847  0592                     	;# 
   848  0593                     	;# 
   849  060C                     	;# 
   850  060D                     	;# 
   851  060E                     	;# 
   852  060F                     	;# 
   853  0610                     	;# 
   854  0611                     	;# 
   855  0612                     	;# 
   856  0613                     	;# 
   857  0614                     	;# 
   858  0616                     	;# 
   859  0617                     	;# 
   860  0618                     	;# 
   861  0619                     	;# 
   862  061A                     	;# 
   863  061B                     	;# 
   864  061C                     	;# 
   865  061D                     	;# 
   866  061E                     	;# 
   867  068C                     	;# 
   868  068D                     	;# 
   869  068E                     	;# 
   870  068F                     	;# 
   871  0690                     	;# 
   872  0691                     	;# 
   873  0692                     	;# 
   874  0693                     	;# 
   875  0694                     	;# 
   876  070C                     	;# 
   877  070D                     	;# 
   878  070E                     	;# 
   879  070F                     	;# 
   880  0710                     	;# 
   881  0711                     	;# 
   882  0712                     	;# 
   883  0713                     	;# 
   884  0714                     	;# 
   885  0716                     	;# 
   886  0717                     	;# 
   887  0718                     	;# 
   888  0719                     	;# 
   889  071A                     	;# 
   890  071B                     	;# 
   891  071C                     	;# 
   892  071D                     	;# 
   893  071E                     	;# 
   894  0796                     	;# 
   895  0797                     	;# 
   896  0798                     	;# 
   897  0799                     	;# 
   898  079A                     	;# 
   899  079B                     	;# 
   900  080C                     	;# 
   901  080D                     	;# 
   902  080E                     	;# 
   903  080F                     	;# 
   904  0810                     	;# 
   905  0811                     	;# 
   906  0812                     	;# 
   907  0813                     	;# 
   908  0814                     	;# 
   909  081A                     	;# 
   910  081B                     	;# 
   911  081C                     	;# 
   912  081D                     	;# 
   913  081E                     	;# 
   914  081F                     	;# 
   915  088C                     	;# 
   916  088D                     	;# 
   917  088E                     	;# 
   918  088F                     	;# 
   919  0890                     	;# 
   920  0891                     	;# 
   921  0892                     	;# 
   922  0893                     	;# 
   923  0895                     	;# 
   924  0896                     	;# 
   925  0897                     	;# 
   926  0898                     	;# 
   927  0899                     	;# 
   928  089A                     	;# 
   929  089B                     	;# 
   930  090C                     	;# 
   931  090E                     	;# 
   932  090F                     	;# 
   933  091F                     	;# 
   934  091F                     	;# 
   935  098F                     	;# 
   936  098F                     	;# 
   937  0990                     	;# 
   938  0991                     	;# 
   939  0992                     	;# 
   940  0993                     	;# 
   941  0994                     	;# 
   942  0995                     	;# 
   943  0996                     	;# 
   944  0997                     	;# 
   945  0E0F                     	;# 
   946  0E10                     	;# 
   947  0E11                     	;# 
   948  0E12                     	;# 
   949  0E13                     	;# 
   950  0E14                     	;# 
   951  0E15                     	;# 
   952  0E16                     	;# 
   953  0E17                     	;# 
   954  0E18                     	;# 
   955  0E19                     	;# 
   956  0E1A                     	;# 
   957  0E1B                     	;# 
   958  0E1C                     	;# 
   959  0E1D                     	;# 
   960  0E1E                     	;# 
   961  0E1F                     	;# 
   962  0E20                     	;# 
   963  0E21                     	;# 
   964  0E22                     	;# 
   965  0E23                     	;# 
   966  0E24                     	;# 
   967  0E25                     	;# 
   968  0E26                     	;# 
   969  0E27                     	;# 
   970  0E28                     	;# 
   971  0E29                     	;# 
   972  0E2A                     	;# 
   973  0E2B                     	;# 
   974  0E2C                     	;# 
   975  0E2D                     	;# 
   976  0E2E                     	;# 
   977  0E2F                     	;# 
   978  0E30                     	;# 
   979  0E31                     	;# 
   980  0E32                     	;# 
   981  0E33                     	;# 
   982  0E34                     	;# 
   983  0E35                     	;# 
   984  0E36                     	;# 
   985  0E37                     	;# 
   986  0E8F                     	;# 
   987  0E90                     	;# 
   988  0E91                     	;# 
   989  0E92                     	;# 
   990  0E93                     	;# 
   991  0E94                     	;# 
   992  0E95                     	;# 
   993  0E96                     	;# 
   994  0E97                     	;# 
   995  0E9C                     	;# 
   996  0E9D                     	;# 
   997  0E9E                     	;# 
   998  0EA1                     	;# 
   999  0EA2                     	;# 
  1000  0EA3                     	;# 
  1001  0EA4                     	;# 
  1002  0EA5                     	;# 
  1003  0EA9                     	;# 
  1004  0EAA                     	;# 
  1005  0EAB                     	;# 
  1006  0EAC                     	;# 
  1007  0EB1                     	;# 
  1008  0EB2                     	;# 
  1009  0EB3                     	;# 
  1010  0EB8                     	;# 
  1011  0EB9                     	;# 
  1012  0EBA                     	;# 
  1013  0EBB                     	;# 
  1014  0EBC                     	;# 
  1015  0EBD                     	;# 
  1016  0EBE                     	;# 
  1017  0EC3                     	;# 
  1018  0EC5                     	;# 
  1019  0EC6                     	;# 
  1020  0EC7                     	;# 
  1021  0EC8                     	;# 
  1022  0EC9                     	;# 
  1023  0ECA                     	;# 
  1024  0ECB                     	;# 
  1025  0ECC                     	;# 
  1026  0F10                     	;# 
  1027  0F11                     	;# 
  1028  0F12                     	;# 
  1029  0F13                     	;# 
  1030  0F14                     	;# 
  1031  0F15                     	;# 
  1032  0F16                     	;# 
  1033  0F17                     	;# 
  1034  0F18                     	;# 
  1035  0F19                     	;# 
  1036  0F1A                     	;# 
  1037  0F1B                     	;# 
  1038  0F1C                     	;# 
  1039  0F1D                     	;# 
  1040  0F1E                     	;# 
  1041  0F1F                     	;# 
  1042  0F20                     	;# 
  1043  0F21                     	;# 
  1044  0F22                     	;# 
  1045  0F23                     	;# 
  1046  0F24                     	;# 
  1047  0F25                     	;# 
  1048  0F26                     	;# 
  1049  0F27                     	;# 
  1050  0F38                     	;# 
  1051  0F39                     	;# 
  1052  0F3A                     	;# 
  1053  0F3B                     	;# 
  1054  0F3C                     	;# 
  1055  0F3D                     	;# 
  1056  0F3E                     	;# 
  1057  0F3F                     	;# 
  1058  0F40                     	;# 
  1059  0F41                     	;# 
  1060  0F43                     	;# 
  1061  0F44                     	;# 
  1062  0F45                     	;# 
  1063  0F46                     	;# 
  1064  0F47                     	;# 
  1065  0F48                     	;# 
  1066  0F49                     	;# 
  1067  0F4A                     	;# 
  1068  0F4B                     	;# 
  1069  0F4C                     	;# 
  1070  0F4E                     	;# 
  1071  0F4F                     	;# 
  1072  0F50                     	;# 
  1073  0F51                     	;# 
  1074  0F52                     	;# 
  1075  0F53                     	;# 
  1076  0F54                     	;# 
  1077  0F55                     	;# 
  1078  0F56                     	;# 
  1079  0F57                     	;# 
  1080  0F65                     	;# 
  1081  0F68                     	;# 
  1082  0F69                     	;# 
  1083  0F6A                     	;# 
  1084  0F6B                     	;# 
  1085  0FE4                     	;# 
  1086  0FE5                     	;# 
  1087  0FE6                     	;# 
  1088  0FE7                     	;# 
  1089  0FE8                     	;# 
  1090  0FE9                     	;# 
  1091  0FEA                     	;# 
  1092  0FEB                     	;# 
  1093  0FED                     	;# 
  1094  0FEE                     	;# 
  1095  0FEF                     	;# 
  1096                           
  1097                           	psect	stringtext1
  1098  02F3                     __pstringtext1:	
  1099  02F3                     _dpowers:	
  1100  02F3  3401               	retlw	1
  1101  02F4  3400               	retlw	0
  1102  02F5  340A               	retlw	10
  1103  02F6  3400               	retlw	0
  1104  02F7  3464               	retlw	100
  1105  02F8  3400               	retlw	0
  1106  02F9  34E8               	retlw	232
  1107  02FA  3403               	retlw	3
  1108  02FB  3410               	retlw	16
  1109  02FC  3427               	retlw	39
  1110  02FD                     __end_of_dpowers:	
  1111  0012                     _TRISBbits	set	18
  1112  0018                     _LATC	set	24
  1113  0017                     _LATB	set	23
  1114  0016                     _LATA	set	22
  1115  000E                     _PORTC	set	14
  1116  000D                     _PORTB	set	13
  1117  000C                     _PORTA	set	12
  1118  0013                     _TRISC	set	19
  1119  0012                     _TRISB	set	18
  1120  0011                     _TRISA	set	17
  1121  000B                     _INTCONbits	set	11
  1122  001D                     _TMR0H	set	29
  1123  001F                     _T0CON1	set	31
  1124  001E                     _T0CON0	set	30
  1125  001C                     _TMR0L	set	28
  1126  0016                     _LATAbits	set	22
  1127  001E                     _T0CON0bits	set	30
  1128  0018                     _LATCbits	set	24
  1129  006A                     _RB2	set	106
  1130  006B                     _RB3	set	107
  1131  0074                     _RC4	set	116
  1132  0073                     _RC3	set	115
  1133  0077                     _RC7	set	119
  1134  0072                     _RC2	set	114
  1135  0076                     _RC6	set	118
  1136  0075                     _RC5	set	117
  1137  0716                     _PIE0bits	set	1814
  1138  070C                     _PIR0bits	set	1804
  1139  0F4E                     _ANSELC	set	3918
  1140  0F43                     _ANSELB	set	3907
  1141  0F38                     _ANSELA	set	3896
  1142  02FD                     STR_3:	
  1143  02FD  3420               	retlw	32	;' '
  1144  02FE  3420               	retlw	32	;' '
  1145  02FF  3420               	retlw	32	;' '
  1146  0300  3420               	retlw	32	;' '
  1147  0301  3420               	retlw	32	;' '
  1148  0302  3420               	retlw	32	;' '
  1149  0303  3420               	retlw	32	;' '
  1150  0304  3420               	retlw	32	;' '
  1151  0305  3420               	retlw	32	;' '
  1152  0306  3420               	retlw	32	;' '
  1153  0307  3420               	retlw	32	;' '
  1154  0308  3400               	retlw	0
  1155                           
  1156                           	psect	stringtext2
  1157  033E                     __pstringtext2:	
  1158  033E                     STR_1:	
  1159  033E  3448               	retlw	72	;'H'
  1160  033F  3465               	retlw	101	;'e'
  1161  0340  346C               	retlw	108	;'l'
  1162  0341  346C               	retlw	108	;'l'
  1163  0342  346F               	retlw	111	;'o'
  1164  0343  3420               	retlw	32	;' '
  1165  0344  3457               	retlw	87	;'W'
  1166  0345  346F               	retlw	111	;'o'
  1167  0346  3472               	retlw	114	;'r'
  1168  0347  346C               	retlw	108	;'l'
  1169  0348  3464               	retlw	100	;'d'
  1170  0349  3400               	retlw	0
  1171                           
  1172                           	psect	stringtext3
  1173  034A                     __pstringtext3:	
  1174  034A                     STR_7:	
  1175  034A  3445               	retlw	69	;'E'
  1176  034B  3478               	retlw	120	;'x'
  1177  034C  3470               	retlw	112	;'p'
  1178  034D  346F               	retlw	111	;'o'
  1179  034E  3473               	retlw	115	;'s'
  1180  034F  3469               	retlw	105	;'i'
  1181  0350  346E               	retlw	110	;'n'
  1182  0351  3467               	retlw	103	;'g'
  1183  0352  3400               	retlw	0
  1184                           
  1185                           	psect	stringtext4
  1186  0353                     __pstringtext4:	
  1187  0353                     STR_5:	
  1188  0353  3453               	retlw	83	;'S'
  1189  0354  3474               	retlw	116	;'t'
  1190  0355  346F               	retlw	111	;'o'
  1191  0356  3470               	retlw	112	;'p'
  1192  0357  3470               	retlw	112	;'p'
  1193  0358  3465               	retlw	101	;'e'
  1194  0359  3464               	retlw	100	;'d'
  1195  035A  3400               	retlw	0
  1196                           
  1197                           	psect	stringtext5
  1198  0363                     __pstringtext5:	
  1199  0363                     STR_2:	
  1200  0363  3425               	retlw	37	;'%'
  1201  0364  3464               	retlw	100	;'d'
  1202  0365  3400               	retlw	0
  1203                           
  1204                           	psect	stringtext6
  1205  0000                     __pstringtext6:	
  1206  0300                     
  1207                           ; #config settings
  1208  0000                     
  1209                           	psect	cinit
  1210  002D                     start_initialization:	
  1211  002D                     __initialization:	
  1212                           
  1213                           ; Clear objects allocated to BANK0
  1214  002D  0020               	movlb	0	; select bank0
  1215  002E  01B5               	clrf	__pbssBANK0& (0+127)
  1216  002F  01B6               	clrf	(__pbssBANK0+1)& (0+127)
  1217  0030  01B7               	clrf	(__pbssBANK0+2)& (0+127)
  1218  0031  01B8               	clrf	(__pbssBANK0+3)& (0+127)
  1219  0032  01B9               	clrf	(__pbssBANK0+4)& (0+127)
  1220  0033  01BA               	clrf	(__pbssBANK0+5)& (0+127)
  1221  0034  01BB               	clrf	(__pbssBANK0+6)& (0+127)
  1222  0035                     end_of_initialization:	
  1223                           ;End of C runtime variable initialization code
  1224                           
  1225  0035                     __end_of__initialization:	
  1226  0035  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1227  0036  0020               	movlb	0
  1228  0037  3181  2906         	ljmp	_main	;jump to C main() function
  1229                           
  1230                           	psect	bssBANK0
  1231  0035                     __pbssBANK0:	
  1232  0035                     _flag:	
  1233  0035                     	ds	2
  1234  0037                     _buffer:	
  1235  0037                     	ds	5
  1236                           
  1237                           	psect	cstackCOMMON
  1238  0070                     __pcstackCOMMON:	
  1239  0070                     ?_initial_config:	
  1240  0070                     ?_init_int:	
  1241                           ; 1 bytes @ 0x0
  1242                           
  1243  0070                     ?_Lcd_Port:	
  1244                           ; 1 bytes @ 0x0
  1245                           
  1246  0070                     ?_Lcd_Cmd:	
  1247                           ; 1 bytes @ 0x0
  1248                           
  1249  0070                     ?_Lcd_Init:	
  1250                           ; 1 bytes @ 0x0
  1251                           
  1252  0070                     ?_Lcd_Write_Char:	
  1253                           ; 1 bytes @ 0x0
  1254                           
  1255  0070                     ?_main:	
  1256                           ; 1 bytes @ 0x0
  1257                           
  1258  0070                     ?_timer:	
  1259                           ; 1 bytes @ 0x0
  1260                           
  1261  0070                     ??_timer:	
  1262                           ; 1 bytes @ 0x0
  1263                           
  1264  0070                     ?_Lcd_Clear:	
  1265                           ; 1 bytes @ 0x0
  1266                           
  1267                           
  1268                           ; 2 bytes @ 0x0
  1269  0070                     	ds	1
  1270  0071                     ??_initial_config:	
  1271  0071                     ??_init_int:	
  1272                           ; 1 bytes @ 0x1
  1273                           
  1274  0071                     ??_Lcd_Port:	
  1275                           ; 1 bytes @ 0x1
  1276                           
  1277  0071                     ?___lwdiv:	
  1278                           ; 1 bytes @ 0x1
  1279                           
  1280  0071                     Lcd_Port@a:	
  1281                           ; 2 bytes @ 0x1
  1282                           
  1283  0071                     ___lwdiv@divisor:	
  1284                           ; 1 bytes @ 0x1
  1285                           
  1286                           
  1287                           ; 2 bytes @ 0x1
  1288  0071                     	ds	1
  1289  0072                     ??_Lcd_Cmd:	
  1290  0072                     ??_Lcd_Write_Char:	
  1291                           ; 1 bytes @ 0x2
  1292                           
  1293                           
  1294                           ; 1 bytes @ 0x2
  1295  0072                     	ds	1
  1296  0073                     Lcd_Cmd@a:	
  1297  0073                     Lcd_Write_Char@temp:	
  1298                           ; 1 bytes @ 0x3
  1299                           
  1300  0073                     ___lwdiv@dividend:	
  1301                           ; 1 bytes @ 0x3
  1302                           
  1303                           
  1304                           ; 2 bytes @ 0x3
  1305  0073                     	ds	1
  1306  0074                     ??_Lcd_Clear:	
  1307  0074                     ?_Lcd_Set_Cursor:	
  1308                           ; 1 bytes @ 0x4
  1309                           
  1310  0074                     ??_Lcd_Init:	
  1311                           ; 1 bytes @ 0x4
  1312                           
  1313  0074                     Lcd_Set_Cursor@b:	
  1314                           ; 1 bytes @ 0x4
  1315                           
  1316  0074                     Lcd_Write_Char@y:	
  1317                           ; 1 bytes @ 0x4
  1318                           
  1319                           
  1320                           ; 1 bytes @ 0x4
  1321  0074                     	ds	1
  1322  0075                     ??_Lcd_Set_Cursor:	
  1323  0075                     ??___lwdiv:	
  1324                           ; 1 bytes @ 0x5
  1325                           
  1326  0075                     Lcd_Write_Char@a:	
  1327                           ; 1 bytes @ 0x5
  1328                           
  1329                           
  1330                           ; 1 bytes @ 0x5
  1331  0075                     	ds	1
  1332  0076                     ?_Lcd_Write_String:	
  1333  0076                     Lcd_Write_String@a:	
  1334                           ; 1 bytes @ 0x6
  1335                           
  1336  0076                     ___lwdiv@quotient:	
  1337                           ; 2 bytes @ 0x6
  1338                           
  1339                           
  1340                           ; 2 bytes @ 0x6
  1341  0076                     	ds	1
  1342  0077                     Lcd_Set_Cursor@a:	
  1343                           
  1344                           ; 1 bytes @ 0x7
  1345  0077                     	ds	1
  1346  0078                     ??_Lcd_Write_String:	
  1347  0078                     Lcd_Set_Cursor@z:	
  1348                           ; 1 bytes @ 0x8
  1349                           
  1350  0078                     ___lwdiv@counter:	
  1351                           ; 1 bytes @ 0x8
  1352                           
  1353                           
  1354                           ; 1 bytes @ 0x8
  1355  0078                     	ds	1
  1356  0079                     ?___lwmod:	
  1357  0079                     Lcd_Set_Cursor@y:	
  1358                           ; 2 bytes @ 0x9
  1359                           
  1360  0079                     Lcd_Write_String@i:	
  1361                           ; 1 bytes @ 0x9
  1362                           
  1363  0079                     ___lwmod@divisor:	
  1364                           ; 2 bytes @ 0x9
  1365                           
  1366                           
  1367                           ; 2 bytes @ 0x9
  1368  0079                     	ds	1
  1369  007A                     Lcd_Set_Cursor@temp:	
  1370                           
  1371                           ; 1 bytes @ 0xA
  1372  007A                     	ds	1
  1373  007B                     ___lwmod@dividend:	
  1374                           
  1375                           ; 2 bytes @ 0xB
  1376  007B                     	ds	2
  1377                           
  1378                           	psect	cstackBANK0
  1379  0020                     __pcstackBANK0:	
  1380  0020                     ??___lwmod:	
  1381                           
  1382                           ; 1 bytes @ 0x0
  1383  0020                     	ds	1
  1384  0021                     ___lwmod@counter:	
  1385                           
  1386                           ; 1 bytes @ 0x1
  1387  0021                     	ds	1
  1388  0022                     ?_sprintf:	
  1389  0022                     sprintf@f:	
  1390                           ; 2 bytes @ 0x2
  1391                           
  1392                           
  1393                           ; 2 bytes @ 0x2
  1394  0022                     	ds	4
  1395  0026                     ??_sprintf:	
  1396                           
  1397                           ; 1 bytes @ 0x6
  1398  0026                     	ds	4
  1399  002A                     sprintf@ap:	
  1400                           
  1401                           ; 1 bytes @ 0xA
  1402  002A                     	ds	1
  1403  002B                     sprintf@flag:	
  1404                           
  1405                           ; 1 bytes @ 0xB
  1406  002B                     	ds	1
  1407  002C                     sprintf@prec:	
  1408                           
  1409                           ; 1 bytes @ 0xC
  1410  002C                     	ds	1
  1411  002D                     sprintf@val:	
  1412                           
  1413                           ; 2 bytes @ 0xD
  1414  002D                     	ds	2
  1415  002F                     sprintf@sp:	
  1416                           
  1417                           ; 1 bytes @ 0xF
  1418  002F                     	ds	1
  1419  0030                     sprintf@c:	
  1420                           
  1421                           ; 1 bytes @ 0x10
  1422  0030                     	ds	1
  1423  0031                     ??_main:	
  1424                           
  1425                           ; 1 bytes @ 0x11
  1426  0031                     	ds	2
  1427  0033                     main@counter:	
  1428                           
  1429                           ; 2 bytes @ 0x13
  1430  0033                     	ds	2
  1431                           
  1432                           	psect	maintext
  1433  0106                     __pmaintext:	
  1434 ;;
  1435 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1436 ;;
  1437 ;; *************** function _main *****************
  1438 ;; Defined at:
  1439 ;;		line 27 in file "main.c"
  1440 ;; Parameters:    Size  Location     Type
  1441 ;;		None
  1442 ;; Auto vars:     Size  Location     Type
  1443 ;;  counter         2   19[BANK0 ] int 
  1444 ;; Return value:  Size  Location     Type
  1445 ;;                  1    wreg      void 
  1446 ;; Registers used:
  1447 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1448 ;; Tracked objects:
  1449 ;;		On entry : B1F/0
  1450 ;;		On exit  : 0/0
  1451 ;;		Unchanged: 0/0
  1452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1453 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1454 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1455 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1456 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1457 ;;Total ram usage:        4 bytes
  1458 ;; Hardware stack levels required when called:    4
  1459 ;; This function calls:
  1460 ;;		_Lcd_Clear
  1461 ;;		_Lcd_Init
  1462 ;;		_Lcd_Set_Cursor
  1463 ;;		_Lcd_Write_String
  1464 ;;		_init_int
  1465 ;;		_initial_config
  1466 ;;		_sprintf
  1467 ;; This function is called by:
  1468 ;;		Startup code after reset
  1469 ;; This function uses a non-reentrant model
  1470 ;;
  1471                           
  1472                           
  1473                           ;psect for function _main
  1474  0106                     _main:	
  1475                           
  1476                           ;main.c: 30: int counter=0;
  1477                           
  1478                           ;incstack = 0
  1479                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1480  0106  0020               	movlb	0	; select bank0
  1481  0107  01B3               	clrf	main@counter
  1482  0108  01B4               	clrf	main@counter+1
  1483                           
  1484                           ;main.c: 32: initial_config();
  1485  0109  3183  2309  3181   	fcall	_initial_config
  1486                           
  1487                           ;main.c: 33: init_int();
  1488  010C  3183  2330  3181   	fcall	_init_int
  1489                           
  1490                           ;main.c: 35: Lcd_Init();
  1491  010F  3181  21B3  3181   	fcall	_Lcd_Init
  1492                           
  1493                           ;main.c: 36: Lcd_Clear();
  1494  0112  3183  235B  3181   	fcall	_Lcd_Clear
  1495                           
  1496                           ;main.c: 38: Lcd_Set_Cursor(1,1);
  1497  0115  01F4               	clrf	Lcd_Set_Cursor@b
  1498  0116  0AF4               	incf	Lcd_Set_Cursor@b,f
  1499  0117  3001               	movlw	1
  1500  0118  3181  21F4  3181   	fcall	_Lcd_Set_Cursor
  1501                           
  1502                           ;main.c: 39: Lcd_Write_String("Hello World");
  1503  011B  303E               	movlw	low (STR_1| (0+32768))
  1504  011C  00F6               	movwf	Lcd_Write_String@a
  1505  011D  3083               	movlw	high (STR_1| (0+32768))
  1506  011E  00F7               	movwf	Lcd_Write_String@a+1
  1507  011F  3182  22C1  3181   	fcall	_Lcd_Write_String
  1508                           
  1509                           ;main.c: 42: LATCbits.LATC1=1;
  1510  0122  0020               	movlb	0	; select bank0
  1511  0123  1498               	bsf	24,1	;volatile
  1512  0124                     l1178:	
  1513                           ;main.c: 44: while(1)
  1514                           
  1515                           
  1516                           ;main.c: 45: {
  1517                           ;main.c: 47: sprintf(buffer, "%d", counter);
  1518  0124  3063               	movlw	low (STR_2| (0+32768))
  1519  0125  0020               	movlb	0	; select bank0
  1520  0126  00A2               	movwf	sprintf@f
  1521  0127  3083               	movlw	high (STR_2| (0+32768))
  1522  0128  00A3               	movwf	sprintf@f+1
  1523  0129  0834               	movf	main@counter+1,w
  1524  012A  00A5               	movwf	?_sprintf+3
  1525  012B  0833               	movf	main@counter,w
  1526  012C  00A4               	movwf	?_sprintf+2
  1527  012D  3037               	movlw	(low (_buffer| 0))& (0+255)
  1528  012E  3180  2039  3181   	fcall	_sprintf
  1529                           
  1530                           ;main.c: 48: Lcd_Set_Cursor(1,1);
  1531  0131  01F4               	clrf	Lcd_Set_Cursor@b
  1532  0132  0AF4               	incf	Lcd_Set_Cursor@b,f
  1533  0133  3001               	movlw	1
  1534  0134  3181  21F4  3181   	fcall	_Lcd_Set_Cursor
  1535                           
  1536                           ;main.c: 49: Lcd_Write_String("           ");
  1537  0137  30FD               	movlw	low (STR_3| (0+32768))
  1538  0138  00F6               	movwf	Lcd_Write_String@a
  1539  0139  3082               	movlw	high (STR_3| (0+32768))
  1540  013A  00F7               	movwf	Lcd_Write_String@a+1
  1541  013B  3182  22C1  3181   	fcall	_Lcd_Write_String
  1542                           
  1543                           ;main.c: 50: Lcd_Set_Cursor(1,1);
  1544  013E  01F4               	clrf	Lcd_Set_Cursor@b
  1545  013F  0AF4               	incf	Lcd_Set_Cursor@b,f
  1546  0140  3001               	movlw	1
  1547  0141  3181  21F4  3181   	fcall	_Lcd_Set_Cursor
  1548                           
  1549                           ;main.c: 51: Lcd_Write_String(buffer);
  1550  0144  3037               	movlw	low _buffer
  1551  0145  00F6               	movwf	Lcd_Write_String@a
  1552  0146  3000               	movlw	high _buffer
  1553  0147  00F7               	movwf	Lcd_Write_String@a+1
  1554  0148  3182  22C1  3181   	fcall	_Lcd_Write_String
  1555                           
  1556                           ;main.c: 52: _delay((unsigned long)((1000)*(32000000/4000.0)));
  1557  014B  3029               	movlw	41
  1558  014C  0020               	movlb	0	; select bank0
  1559  014D  00B2               	movwf	??_main+1
  1560  014E  3096               	movlw	150
  1561  014F  00B1               	movwf	??_main
  1562  0150  307F               	movlw	127
  1563  0151                     u677:	
  1564  0151  0B89               	decfsz	9,f
  1565  0152  2951               	goto	u677
  1566  0153  0BB1               	decfsz	??_main,f
  1567  0154  2951               	goto	u677
  1568  0155  0BB2               	decfsz	??_main+1,f
  1569  0156  2951               	goto	u677
  1570                           
  1571                           ;main.c: 53: counter++;
  1572  0157  3001               	movlw	1
  1573  0158  0020               	movlb	0	; select bank0
  1574  0159  07B3               	addwf	main@counter,f
  1575  015A  3000               	movlw	0
  1576  015B  3DB4               	addwfc	main@counter+1,f
  1577                           
  1578                           ;main.c: 57: if(RB3==1)
  1579  015C  1D8D               	btfss	13,3	;volatile
  1580  015D  2987               	goto	l1204
  1581                           
  1582                           ;main.c: 58: {
  1583                           ;main.c: 59: Lcd_Set_Cursor(2,1);
  1584  015E  01F4               	clrf	Lcd_Set_Cursor@b
  1585  015F  0AF4               	incf	Lcd_Set_Cursor@b,f
  1586  0160  3002               	movlw	2
  1587  0161  3181  21F4  3181   	fcall	_Lcd_Set_Cursor
  1588                           
  1589                           ;main.c: 60: Lcd_Write_String("        ");
  1590  0164  3000               	movlw	low ((STR_3+3)| (0+32768))
  1591  0165  00F6               	movwf	Lcd_Write_String@a
  1592  0166  3083               	movlw	high ((STR_3+3)| (0+32768))
  1593  0167  00F7               	movwf	Lcd_Write_String@a+1
  1594  0168  3182  22C1  3181   	fcall	_Lcd_Write_String
  1595                           
  1596                           ;main.c: 61: Lcd_Set_Cursor(2,1);
  1597  016B  01F4               	clrf	Lcd_Set_Cursor@b
  1598  016C  0AF4               	incf	Lcd_Set_Cursor@b,f
  1599  016D  3002               	movlw	2
  1600  016E  3181  21F4  3181   	fcall	_Lcd_Set_Cursor
  1601                           
  1602                           ;main.c: 62: Lcd_Write_String("Stopped");
  1603  0171  3053               	movlw	low (STR_5| (0+32768))
  1604  0172  00F6               	movwf	Lcd_Write_String@a
  1605  0173  3083               	movlw	high (STR_5| (0+32768))
  1606  0174  00F7               	movwf	Lcd_Write_String@a+1
  1607  0175  3182  22C1  3181   	fcall	_Lcd_Write_String
  1608                           
  1609                           ;main.c: 63: _delay((unsigned long)((500)*(32000000/4000.0)));
  1610  0178  3015               	movlw	21
  1611  0179  0020               	movlb	0	; select bank0
  1612  017A  00B2               	movwf	??_main+1
  1613  017B  304B               	movlw	75
  1614  017C  00B1               	movwf	??_main
  1615  017D  30BE               	movlw	190
  1616  017E                     u687:	
  1617  017E  0B89               	decfsz	9,f
  1618  017F  297E               	goto	u687
  1619  0180  0BB1               	decfsz	??_main,f
  1620  0181  297E               	goto	u687
  1621  0182  0BB2               	decfsz	??_main+1,f
  1622  0183  297E               	goto	u687
  1623  0184  0000               	nop
  1624                           
  1625                           ;main.c: 64: LATCbits.LATC1=1;
  1626  0185  0020               	movlb	0	; select bank0
  1627  0186  1498               	bsf	24,1	;volatile
  1628  0187                     l1204:	
  1629                           
  1630                           ;main.c: 65: }
  1631                           ;main.c: 67: if(RB2==1)
  1632  0187  1D0D               	btfss	13,2	;volatile
  1633  0188  2924               	goto	l1178
  1634                           
  1635                           ;main.c: 68: {
  1636                           ;main.c: 69: Lcd_Set_Cursor(2,1);
  1637  0189  01F4               	clrf	Lcd_Set_Cursor@b
  1638  018A  0AF4               	incf	Lcd_Set_Cursor@b,f
  1639  018B  3002               	movlw	2
  1640  018C  3181  21F4  3181   	fcall	_Lcd_Set_Cursor
  1641                           
  1642                           ;main.c: 70: Lcd_Write_String("        ");
  1643  018F  3000               	movlw	low ((STR_3+3)| (0+32768))
  1644  0190  00F6               	movwf	Lcd_Write_String@a
  1645  0191  3083               	movlw	high ((STR_3+3)| (0+32768))
  1646  0192  00F7               	movwf	Lcd_Write_String@a+1
  1647  0193  3182  22C1  3181   	fcall	_Lcd_Write_String
  1648                           
  1649                           ;main.c: 71: Lcd_Set_Cursor(2,1);
  1650  0196  01F4               	clrf	Lcd_Set_Cursor@b
  1651  0197  0AF4               	incf	Lcd_Set_Cursor@b,f
  1652  0198  3002               	movlw	2
  1653  0199  3181  21F4  3181   	fcall	_Lcd_Set_Cursor
  1654                           
  1655                           ;main.c: 72: Lcd_Write_String("Exposing");
  1656  019C  304A               	movlw	low (STR_7| (0+32768))
  1657  019D  00F6               	movwf	Lcd_Write_String@a
  1658  019E  3083               	movlw	high (STR_7| (0+32768))
  1659  019F  00F7               	movwf	Lcd_Write_String@a+1
  1660  01A0  3182  22C1  3181   	fcall	_Lcd_Write_String
  1661                           
  1662                           ;main.c: 73: LATCbits.LATC1=0;
  1663  01A3  0020               	movlb	0	; select bank0
  1664  01A4  1098               	bcf	24,1	;volatile
  1665                           
  1666                           ;main.c: 74: _delay((unsigned long)((500)*(32000000/4000.0)));
  1667  01A5  3015               	movlw	21
  1668  01A6  0020               	movlb	0	; select bank0
  1669  01A7  00B2               	movwf	??_main+1
  1670  01A8  304B               	movlw	75
  1671  01A9  00B1               	movwf	??_main
  1672  01AA  30BE               	movlw	190
  1673  01AB                     u697:	
  1674  01AB  0B89               	decfsz	9,f
  1675  01AC  29AB               	goto	u697
  1676  01AD  0BB1               	decfsz	??_main,f
  1677  01AE  29AB               	goto	u697
  1678  01AF  0BB2               	decfsz	??_main+1,f
  1679  01B0  29AB               	goto	u697
  1680  01B1  0000               	nop
  1681  01B2  2924               	goto	l1178
  1682  01B3                     __end_of_main:	
  1683                           
  1684                           	psect	text1
  1685  0039                     __ptext1:	
  1686 ;; *************** function _sprintf *****************
  1687 ;; Defined at:
  1688 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  1689 ;; Parameters:    Size  Location     Type
  1690 ;;  sp              1    wreg     PTR unsigned char 
  1691 ;;		 -> buffer(5), 
  1692 ;;  f               2    2[BANK0 ] PTR const unsigned char 
  1693 ;;		 -> STR_2(3), 
  1694 ;; Auto vars:     Size  Location     Type
  1695 ;;  sp              1   15[BANK0 ] PTR unsigned char 
  1696 ;;		 -> buffer(5), 
  1697 ;;  tmpval          4    0        struct .
  1698 ;;  val             2   13[BANK0 ] unsigned int 
  1699 ;;  cp              2    0        PTR const unsigned char 
  1700 ;;  len             2    0        unsigned int 
  1701 ;;  c               1   16[BANK0 ] char 
  1702 ;;  prec            1   12[BANK0 ] char 
  1703 ;;  flag            1   11[BANK0 ] unsigned char 
  1704 ;;  ap              1   10[BANK0 ] PTR void [1]
  1705 ;;		 -> ?_sprintf(2), 
  1706 ;; Return value:  Size  Location     Type
  1707 ;;                  2    2[BANK0 ] int 
  1708 ;; Registers used:
  1709 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1710 ;; Tracked objects:
  1711 ;;		On entry : 0/0
  1712 ;;		On exit  : 0/0
  1713 ;;		Unchanged: 0/0
  1714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1715 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1716 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1717 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1718 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1719 ;;Total ram usage:       15 bytes
  1720 ;; Hardware stack levels used:    1
  1721 ;; Hardware stack levels required when called:    2
  1722 ;; This function calls:
  1723 ;;		___lwdiv
  1724 ;;		___lwmod
  1725 ;; This function is called by:
  1726 ;;		_main
  1727 ;; This function uses a non-reentrant model
  1728 ;;
  1729                           
  1730                           
  1731                           ;psect for function _sprintf
  1732  0039                     _sprintf:	
  1733                           
  1734                           ;incstack = 0
  1735                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1736                           ;sprintf@sp stored from wreg
  1737  0039  0020               	movlb	0	; select bank0
  1738  003A  00AF               	movwf	sprintf@sp
  1739                           
  1740                           ;doprnt.c: 494: va_list ap;
  1741                           ;doprnt.c: 499: signed char c;
  1742                           ;doprnt.c: 506: signed char prec;
  1743                           ;doprnt.c: 508: unsigned char flag;
  1744                           ;doprnt.c: 523: union {
  1745                           ;doprnt.c: 524: unsigned long vd;
  1746                           ;doprnt.c: 525: double integ;
  1747                           ;doprnt.c: 526: } tmpval;
  1748                           ;doprnt.c: 528: unsigned int val;
  1749                           ;doprnt.c: 529: unsigned len;
  1750                           ;doprnt.c: 530: const char * cp;
  1751                           ;doprnt.c: 533: *ap = __va_start();
  1752  003B  3024               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  1753  003C  00A6               	movwf	??_sprintf
  1754  003D  0826               	movf	??_sprintf,w
  1755  003E  00AA               	movwf	sprintf@ap
  1756  003F                     l1152:	
  1757                           ;doprnt.c: 536: while(c = *f++) {
  1758                           
  1759  003F  0823               	movf	sprintf@f+1,w
  1760  0040  00A7               	movwf	??_sprintf+1
  1761  0041  0822               	movf	sprintf@f,w
  1762  0042  00A6               	movwf	??_sprintf
  1763  0043  0AA2               	incf	sprintf@f,f
  1764  0044  1903               	skipnz
  1765  0045  0AA3               	incf	sprintf@f+1,f
  1766  0046  0826               	movf	??_sprintf,w
  1767  0047  0084               	movwf	4
  1768  0048  0827               	movf	??_sprintf+1,w
  1769  0049  0085               	movwf	5
  1770  004A  0800               	movf	0,w	;code access
  1771  004B  00A8               	movwf	??_sprintf+2
  1772  004C  0828               	movf	??_sprintf+2,w
  1773  004D  00B0               	movwf	sprintf@c
  1774  004E  0830               	movf	sprintf@c,w
  1775  004F  1903               	btfsc	3,2
  1776  0050  2901               	goto	l1154
  1777                           
  1778                           ;doprnt.c: 538: if(c != '%')
  1779  0051  3025               	movlw	37
  1780  0052  0630               	xorwf	sprintf@c,w
  1781  0053  1903               	btfsc	3,2
  1782  0054  2861               	goto	l1108
  1783                           
  1784                           ;doprnt.c: 540: {
  1785                           ;doprnt.c: 541: ((*sp++ = (c)));
  1786  0055  0830               	movf	sprintf@c,w
  1787  0056  00A6               	movwf	??_sprintf
  1788  0057  082F               	movf	sprintf@sp,w
  1789  0058  0086               	movwf	6
  1790  0059  0187               	clrf	7
  1791  005A  0826               	movf	??_sprintf,w
  1792  005B  0081               	movwf	1
  1793  005C  3001               	movlw	1
  1794  005D  00A6               	movwf	??_sprintf
  1795  005E  0826               	movf	??_sprintf,w
  1796  005F  07AF               	addwf	sprintf@sp,f
  1797                           
  1798                           ;doprnt.c: 542: continue;
  1799  0060  283F               	goto	l1152
  1800  0061                     l1108:	
  1801                           
  1802                           ;doprnt.c: 543: }
  1803                           ;doprnt.c: 548: flag = 0;
  1804  0061  01AB               	clrf	sprintf@flag
  1805                           
  1806                           ;doprnt.c: 822: }
  1807                           
  1808                           ;doprnt.c: 813: continue;
  1809                           
  1810                           ;doprnt.c: 802: default:
  1811                           
  1812                           ;doprnt.c: 698: case 'i':
  1813                           ;doprnt.c: 699: break;
  1814                           
  1815                           ;doprnt.c: 697: case 'd':
  1816                           
  1817                           ;doprnt.c: 638: goto alldone;
  1818                           
  1819                           ;doprnt.c: 637: case 0:
  1820                           
  1821                           ;doprnt.c: 635: switch(c = *f++) {
  1822  0062  0823               	movf	sprintf@f+1,w
  1823  0063  00A7               	movwf	??_sprintf+1
  1824  0064  0822               	movf	sprintf@f,w
  1825  0065  00A6               	movwf	??_sprintf
  1826  0066  0AA2               	incf	sprintf@f,f
  1827  0067  1903               	skipnz
  1828  0068  0AA3               	incf	sprintf@f+1,f
  1829  0069  0826               	movf	??_sprintf,w
  1830  006A  0084               	movwf	4
  1831  006B  0827               	movf	??_sprintf+1,w
  1832  006C  0085               	movwf	5
  1833  006D  0800               	movf	0,w	;code access
  1834  006E  00B0               	movwf	sprintf@c
  1835                           
  1836                           ; Switch size 1, requested type "space"
  1837                           ; Number of cases is 3, Range of values is 0 to 105
  1838                           ; switch strategies available:
  1839                           ; Name         Instructions Cycles
  1840                           ; simple_byte           10     6 (average)
  1841                           ; direct_byte          218     6 (fixed)
  1842                           ; jumptable            260     6 (fixed)
  1843                           ;	Chosen strategy is simple_byte
  1844  006F  3A00               	xorlw	0	; case 0
  1845  0070  1903               	skipnz
  1846  0071  2901               	goto	l1154
  1847  0072  3A64               	xorlw	100	; case 100
  1848  0073  1903               	skipnz
  1849  0074  2879               	goto	l1114
  1850  0075  3A0D               	xorlw	13	; case 105
  1851  0076  1903               	skipnz
  1852  0077  2879               	goto	l1114
  1853  0078  283F               	goto	l1152
  1854  0079                     l1114:	
  1855                           
  1856                           ;doprnt.c: 1253: {
  1857                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1858  0079  082A               	movf	sprintf@ap,w
  1859  007A  0086               	movwf	6
  1860  007B  0187               	clrf	7
  1861  007C  3F40               	moviw [0]fsr1
  1862  007D  00AD               	movwf	sprintf@val
  1863  007E  3F41               	moviw [1]fsr1
  1864  007F  00AE               	movwf	sprintf@val+1
  1865  0080  3002               	movlw	2
  1866  0081  00A6               	movwf	??_sprintf
  1867  0082  0826               	movf	??_sprintf,w
  1868  0083  07AA               	addwf	sprintf@ap,f
  1869                           
  1870                           ;doprnt.c: 1261: if((int)val < 0) {
  1871  0084  1FAE               	btfss	sprintf@val+1,7
  1872  0085  288F               	goto	l1124
  1873                           
  1874                           ;doprnt.c: 1262: flag |= 0x03;
  1875  0086  3003               	movlw	3
  1876  0087  00A6               	movwf	??_sprintf
  1877  0088  0826               	movf	??_sprintf,w
  1878  0089  04AB               	iorwf	sprintf@flag,f
  1879                           
  1880                           ;doprnt.c: 1263: val = -val;
  1881  008A  09AD               	comf	sprintf@val,f
  1882  008B  09AE               	comf	sprintf@val+1,f
  1883  008C  0AAD               	incf	sprintf@val,f
  1884  008D  1903               	skipnz
  1885  008E  0AAE               	incf	sprintf@val+1,f
  1886  008F                     l1124:	
  1887                           
  1888                           ;doprnt.c: 1264: }
  1889                           ;doprnt.c: 1266: }
  1890                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  1891  008F  01B0               	clrf	sprintf@c
  1892  0090  0AB0               	incf	sprintf@c,f
  1893  0091  3005               	movlw	5
  1894  0092  0630               	xorwf	sprintf@c,w
  1895  0093  1903               	btfsc	3,2
  1896  0094  28B4               	goto	l1136
  1897  0095                     l1130:	
  1898                           
  1899                           ;doprnt.c: 1306: if(val < dpowers[c])
  1900  0095  0830               	movf	sprintf@c,w
  1901  0096  00A6               	movwf	??_sprintf
  1902  0097  01A7               	clrf	??_sprintf+1
  1903  0098  35A6               	lslf	??_sprintf,f
  1904  0099  0DA7               	rlf	??_sprintf+1,f
  1905  009A  30F3               	movlw	low (_dpowers| (0+32768))
  1906  009B  0726               	addwf	??_sprintf,w
  1907  009C  0084               	movwf	4
  1908  009D  3082               	movlw	high (_dpowers| (0+32768))
  1909  009E  3D27               	addwfc	??_sprintf+1,w
  1910  009F  0085               	movwf	5
  1911  00A0  3F00               	moviw [0]fsr0
  1912  00A1  00A8               	movwf	??_sprintf+2
  1913  00A2  3F01               	moviw [1]fsr0
  1914  00A3  00A9               	movwf	??_sprintf+3
  1915  00A4  0829               	movf	??_sprintf+3,w
  1916  00A5  022E               	subwf	sprintf@val+1,w
  1917  00A6  1D03               	skipz
  1918  00A7  28AA               	goto	u605
  1919  00A8  0828               	movf	??_sprintf+2,w
  1920  00A9  022D               	subwf	sprintf@val,w
  1921  00AA                     u605:	
  1922  00AA  1C03               	btfss	3,0
  1923  00AB  28B4               	goto	l1136
  1924                           
  1925                           ;doprnt.c: 1307: break;
  1926  00AC  3001               	movlw	1
  1927  00AD  00A6               	movwf	??_sprintf
  1928  00AE  0826               	movf	??_sprintf,w
  1929  00AF  07B0               	addwf	sprintf@c,f
  1930  00B0  3005               	movlw	5
  1931  00B1  0630               	xorwf	sprintf@c,w
  1932  00B2  1D03               	btfss	3,2
  1933  00B3  2895               	goto	l1130
  1934  00B4                     l1136:	
  1935                           
  1936                           ;doprnt.c: 1422: {
  1937                           ;doprnt.c: 1438: if(flag & 0x03)
  1938  00B4  082B               	movf	sprintf@flag,w
  1939  00B5  3903               	andlw	3
  1940  00B6  1903               	btfsc	3,2
  1941  00B7  28C3               	goto	l1142
  1942                           
  1943                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  1944  00B8  302D               	movlw	45
  1945  00B9  00A6               	movwf	??_sprintf
  1946  00BA  082F               	movf	sprintf@sp,w
  1947  00BB  0086               	movwf	6
  1948  00BC  0187               	clrf	7
  1949  00BD  0826               	movf	??_sprintf,w
  1950  00BE  0081               	movwf	1
  1951  00BF  3001               	movlw	1
  1952  00C0  00A6               	movwf	??_sprintf
  1953  00C1  0826               	movf	??_sprintf,w
  1954  00C2  07AF               	addwf	sprintf@sp,f
  1955  00C3                     l1142:	
  1956                           
  1957                           ;doprnt.c: 1469: }
  1958                           ;doprnt.c: 1472: prec = c;
  1959  00C3  0830               	movf	sprintf@c,w
  1960  00C4  00A6               	movwf	??_sprintf
  1961  00C5  0826               	movf	??_sprintf,w
  1962  00C6  00AC               	movwf	sprintf@prec
  1963  00C7                     l1150:	
  1964                           ;doprnt.c: 1474: while(prec--) {
  1965                           
  1966  00C7  30FF               	movlw	255
  1967  00C8  00A6               	movwf	??_sprintf
  1968  00C9  0826               	movf	??_sprintf,w
  1969  00CA  07AC               	addwf	sprintf@prec,f
  1970  00CB  0A2C               	incf	sprintf@prec,w
  1971  00CC  1903               	btfsc	3,2
  1972  00CD  283F               	goto	l1152
  1973                           
  1974                           ;doprnt.c: 1478: {
  1975                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  1976  00CE  300A               	movlw	10
  1977  00CF  00F9               	movwf	___lwmod@divisor
  1978  00D0  3000               	movlw	0
  1979  00D1  00FA               	movwf	___lwmod@divisor+1
  1980  00D2  082C               	movf	sprintf@prec,w
  1981  00D3  00A6               	movwf	??_sprintf
  1982  00D4  01A7               	clrf	??_sprintf+1
  1983  00D5  35A6               	lslf	??_sprintf,f
  1984  00D6  0DA7               	rlf	??_sprintf+1,f
  1985  00D7  30F3               	movlw	low (_dpowers| (0+32768))
  1986  00D8  0726               	addwf	??_sprintf,w
  1987  00D9  0084               	movwf	4
  1988  00DA  3082               	movlw	high (_dpowers| (0+32768))
  1989  00DB  3D27               	addwfc	??_sprintf+1,w
  1990  00DC  0085               	movwf	5
  1991  00DD  3F00               	moviw [0]fsr0
  1992  00DE  00F1               	movwf	___lwdiv@divisor
  1993  00DF  3F01               	moviw [1]fsr0
  1994  00E0  00F2               	movwf	___lwdiv@divisor+1
  1995  00E1  082E               	movf	sprintf@val+1,w
  1996  00E2  00F4               	movwf	___lwdiv@dividend+1
  1997  00E3  082D               	movf	sprintf@val,w
  1998  00E4  00F3               	movwf	___lwdiv@dividend
  1999  00E5  3182  2234  3180   	fcall	___lwdiv
  2000  00E8  0872               	movf	?___lwdiv+1,w
  2001  00E9  00FC               	movwf	___lwmod@dividend+1
  2002  00EA  0871               	movf	?___lwdiv,w
  2003  00EB  00FB               	movwf	___lwmod@dividend
  2004  00EC  3182  2268  3180   	fcall	___lwmod
  2005  00EF  0879               	movf	?___lwmod,w
  2006  00F0  3E30               	addlw	48
  2007  00F1  0020               	movlb	0	; select bank0
  2008  00F2  00A8               	movwf	??_sprintf+2
  2009  00F3  0828               	movf	??_sprintf+2,w
  2010  00F4  00B0               	movwf	sprintf@c
  2011                           
  2012                           ;doprnt.c: 1523: }
  2013                           ;doprnt.c: 1524: ((*sp++ = (c)));
  2014  00F5  0830               	movf	sprintf@c,w
  2015  00F6  00A6               	movwf	??_sprintf
  2016  00F7  082F               	movf	sprintf@sp,w
  2017  00F8  0086               	movwf	6
  2018  00F9  0187               	clrf	7
  2019  00FA  0826               	movf	??_sprintf,w
  2020  00FB  0081               	movwf	1
  2021  00FC  3001               	movlw	1
  2022  00FD  00A6               	movwf	??_sprintf
  2023  00FE  0826               	movf	??_sprintf,w
  2024  00FF  07AF               	addwf	sprintf@sp,f
  2025  0100  28C7               	goto	l1150
  2026  0101                     l1154:	
  2027                           ;doprnt.c: 1525: }
  2028                           ;doprnt.c: 1533: }
  2029                           ;doprnt.c: 1535: alldone:
  2030                           
  2031                           
  2032                           ;doprnt.c: 1538: *sp = 0;
  2033  0101  082F               	movf	sprintf@sp,w
  2034  0102  0086               	movwf	6
  2035  0103  0187               	clrf	7
  2036  0104  0181               	clrf	1
  2037  0105  0008               	return
  2038  0106                     __end_of_sprintf:	
  2039                           ;doprnt.c: 1540: return 0;
  2040                           ;	Return value of _sprintf is never used
  2041                           
  2042                           
  2043                           	psect	text2
  2044  0268                     __ptext2:	
  2045 ;; *************** function ___lwmod *****************
  2046 ;; Defined at:
  2047 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
  2048 ;; Parameters:    Size  Location     Type
  2049 ;;  divisor         2    9[COMMON] unsigned int 
  2050 ;;  dividend        2   11[COMMON] unsigned int 
  2051 ;; Auto vars:     Size  Location     Type
  2052 ;;  counter         1    1[BANK0 ] unsigned char 
  2053 ;; Return value:  Size  Location     Type
  2054 ;;                  2    9[COMMON] unsigned int 
  2055 ;; Registers used:
  2056 ;;		wreg, status,2, status,0
  2057 ;; Tracked objects:
  2058 ;;		On entry : 0/0
  2059 ;;		On exit  : 0/0
  2060 ;;		Unchanged: 0/0
  2061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2062 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2063 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2064 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2065 ;;      Totals:         4       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2066 ;;Total ram usage:        6 bytes
  2067 ;; Hardware stack levels used:    1
  2068 ;; Hardware stack levels required when called:    1
  2069 ;; This function calls:
  2070 ;;		Nothing
  2071 ;; This function is called by:
  2072 ;;		_sprintf
  2073 ;; This function uses a non-reentrant model
  2074 ;;
  2075                           
  2076                           
  2077                           ;psect for function ___lwmod
  2078  0268                     ___lwmod:	
  2079                           
  2080                           ;incstack = 0
  2081                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2082  0268  0879               	movf	___lwmod@divisor,w
  2083  0269  047A               	iorwf	___lwmod@divisor+1,w
  2084  026A  1903               	btfsc	3,2
  2085  026B  2A90               	goto	l1032
  2086  026C  0020               	movlb	0	; select bank0
  2087  026D  01A1               	clrf	___lwmod@counter
  2088  026E  0AA1               	incf	___lwmod@counter,f
  2089  026F                     l1022:	
  2090  026F  1BFA               	btfsc	___lwmod@divisor+1,7
  2091  0270  2A7B               	goto	l1024
  2092  0271  3001               	movlw	1
  2093  0272                     u475:	
  2094  0272  35F9               	lslf	___lwmod@divisor,f
  2095  0273  0DFA               	rlf	___lwmod@divisor+1,f
  2096  0274  0B89               	decfsz	9,f
  2097  0275  2A72               	goto	u475
  2098  0276  3001               	movlw	1
  2099  0277  00A0               	movwf	??___lwmod
  2100  0278  0820               	movf	??___lwmod,w
  2101  0279  07A1               	addwf	___lwmod@counter,f
  2102  027A  2A6F               	goto	l1022
  2103  027B                     l1024:	
  2104  027B  087A               	movf	___lwmod@divisor+1,w
  2105  027C  027C               	subwf	___lwmod@dividend+1,w
  2106  027D  1D03               	skipz
  2107  027E  2A81               	goto	u495
  2108  027F  0879               	movf	___lwmod@divisor,w
  2109  0280  027B               	subwf	___lwmod@dividend,w
  2110  0281                     u495:	
  2111  0281  1C03               	skipc
  2112  0282  2A87               	goto	l1028
  2113  0283  0879               	movf	___lwmod@divisor,w
  2114  0284  02FB               	subwf	___lwmod@dividend,f
  2115  0285  087A               	movf	___lwmod@divisor+1,w
  2116  0286  3BFC               	subwfb	___lwmod@dividend+1,f
  2117  0287                     l1028:	
  2118  0287  3001               	movlw	1
  2119  0288                     u505:	
  2120  0288  36FA               	lsrf	___lwmod@divisor+1,f
  2121  0289  0CF9               	rrf	___lwmod@divisor,f
  2122  028A  0B89               	decfsz	9,f
  2123  028B  2A88               	goto	u505
  2124  028C  3001               	movlw	1
  2125  028D  02A1               	subwf	___lwmod@counter,f
  2126  028E  1D03               	btfss	3,2
  2127  028F  2A7B               	goto	l1024
  2128  0290                     l1032:	
  2129  0290  087C               	movf	___lwmod@dividend+1,w
  2130  0291  00FA               	movwf	?___lwmod+1
  2131  0292  087B               	movf	___lwmod@dividend,w
  2132  0293  00F9               	movwf	?___lwmod
  2133  0294  0008               	return
  2134  0295                     __end_of___lwmod:	
  2135                           
  2136                           	psect	text3
  2137  0234                     __ptext3:	
  2138 ;; *************** function ___lwdiv *****************
  2139 ;; Defined at:
  2140 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c"
  2141 ;; Parameters:    Size  Location     Type
  2142 ;;  divisor         2    1[COMMON] unsigned int 
  2143 ;;  dividend        2    3[COMMON] unsigned int 
  2144 ;; Auto vars:     Size  Location     Type
  2145 ;;  quotient        2    6[COMMON] unsigned int 
  2146 ;;  counter         1    8[COMMON] unsigned char 
  2147 ;; Return value:  Size  Location     Type
  2148 ;;                  2    1[COMMON] unsigned int 
  2149 ;; Registers used:
  2150 ;;		wreg, status,2, status,0
  2151 ;; Tracked objects:
  2152 ;;		On entry : 0/0
  2153 ;;		On exit  : 0/0
  2154 ;;		Unchanged: 0/0
  2155 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2156 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2157 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2158 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2159 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2160 ;;Total ram usage:        8 bytes
  2161 ;; Hardware stack levels used:    1
  2162 ;; Hardware stack levels required when called:    1
  2163 ;; This function calls:
  2164 ;;		Nothing
  2165 ;; This function is called by:
  2166 ;;		_sprintf
  2167 ;; This function uses a non-reentrant model
  2168 ;;
  2169                           
  2170                           
  2171                           ;psect for function ___lwdiv
  2172  0234                     ___lwdiv:	
  2173                           
  2174                           ;incstack = 0
  2175                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2176  0234  01F6               	clrf	___lwdiv@quotient
  2177  0235  01F7               	clrf	___lwdiv@quotient+1
  2178  0236  0871               	movf	___lwdiv@divisor,w
  2179  0237  0472               	iorwf	___lwdiv@divisor+1,w
  2180  0238  1903               	btfsc	3,2
  2181  0239  2A63               	goto	l1010
  2182  023A  01F8               	clrf	___lwdiv@counter
  2183  023B  0AF8               	incf	___lwdiv@counter,f
  2184  023C                     l998:	
  2185  023C  1BF2               	btfsc	___lwdiv@divisor+1,7
  2186  023D  2A48               	goto	l1000
  2187  023E  3001               	movlw	1
  2188  023F                     u405:	
  2189  023F  35F1               	lslf	___lwdiv@divisor,f
  2190  0240  0DF2               	rlf	___lwdiv@divisor+1,f
  2191  0241  0B89               	decfsz	9,f
  2192  0242  2A3F               	goto	u405
  2193  0243  3001               	movlw	1
  2194  0244  00F5               	movwf	??___lwdiv
  2195  0245  0875               	movf	??___lwdiv,w
  2196  0246  07F8               	addwf	___lwdiv@counter,f
  2197  0247  2A3C               	goto	l998
  2198  0248                     l1000:	
  2199  0248  3001               	movlw	1
  2200  0249                     u425:	
  2201  0249  35F6               	lslf	___lwdiv@quotient,f
  2202  024A  0DF7               	rlf	___lwdiv@quotient+1,f
  2203  024B  0B89               	decfsz	9,f
  2204  024C  2A49               	goto	u425
  2205  024D  0872               	movf	___lwdiv@divisor+1,w
  2206  024E  0274               	subwf	___lwdiv@dividend+1,w
  2207  024F  1D03               	skipz
  2208  0250  2A53               	goto	u435
  2209  0251  0871               	movf	___lwdiv@divisor,w
  2210  0252  0273               	subwf	___lwdiv@dividend,w
  2211  0253                     u435:	
  2212  0253  1C03               	skipc
  2213  0254  2A5A               	goto	l1006
  2214  0255  0871               	movf	___lwdiv@divisor,w
  2215  0256  02F3               	subwf	___lwdiv@dividend,f
  2216  0257  0872               	movf	___lwdiv@divisor+1,w
  2217  0258  3BF4               	subwfb	___lwdiv@dividend+1,f
  2218  0259  1476               	bsf	___lwdiv@quotient,0
  2219  025A                     l1006:	
  2220  025A  3001               	movlw	1
  2221  025B                     u445:	
  2222  025B  36F2               	lsrf	___lwdiv@divisor+1,f
  2223  025C  0CF1               	rrf	___lwdiv@divisor,f
  2224  025D  0B89               	decfsz	9,f
  2225  025E  2A5B               	goto	u445
  2226  025F  3001               	movlw	1
  2227  0260  02F8               	subwf	___lwdiv@counter,f
  2228  0261  1D03               	btfss	3,2
  2229  0262  2A48               	goto	l1000
  2230  0263                     l1010:	
  2231  0263  0877               	movf	___lwdiv@quotient+1,w
  2232  0264  00F2               	movwf	?___lwdiv+1
  2233  0265  0876               	movf	___lwdiv@quotient,w
  2234  0266  00F1               	movwf	?___lwdiv
  2235  0267  0008               	return
  2236  0268                     __end_of___lwdiv:	
  2237                           
  2238                           	psect	text4
  2239  0309                     __ptext4:	
  2240 ;; *************** function _initial_config *****************
  2241 ;; Defined at:
  2242 ;;		line 31 in file "config.c"
  2243 ;; Parameters:    Size  Location     Type
  2244 ;;		None
  2245 ;; Auto vars:     Size  Location     Type
  2246 ;;		None
  2247 ;; Return value:  Size  Location     Type
  2248 ;;                  1    wreg      void 
  2249 ;; Registers used:
  2250 ;;		status,2
  2251 ;; Tracked objects:
  2252 ;;		On entry : 0/0
  2253 ;;		On exit  : 0/0
  2254 ;;		Unchanged: 0/0
  2255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2256 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2259 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2260 ;;Total ram usage:        0 bytes
  2261 ;; Hardware stack levels used:    1
  2262 ;; Hardware stack levels required when called:    1
  2263 ;; This function calls:
  2264 ;;		Nothing
  2265 ;; This function is called by:
  2266 ;;		_main
  2267 ;; This function uses a non-reentrant model
  2268 ;;
  2269                           
  2270                           
  2271                           ;psect for function _initial_config
  2272  0309                     _initial_config:	
  2273                           
  2274                           ;config.c: 33: TRISA=0X00;
  2275                           
  2276                           ;incstack = 0
  2277                           ; Regs used in _initial_config: [status,2]
  2278  0309  0020               	movlb	0	; select bank0
  2279  030A  0191               	clrf	17	;volatile
  2280                           
  2281                           ;config.c: 34: TRISB=0X00;
  2282  030B  0192               	clrf	18	;volatile
  2283                           
  2284                           ;config.c: 35: TRISC=0X00;
  2285  030C  0193               	clrf	19	;volatile
  2286                           
  2287                           ;config.c: 37: PORTA=0X00;
  2288  030D  018C               	clrf	12	;volatile
  2289                           
  2290                           ;config.c: 38: PORTB=0X00;
  2291  030E  018D               	clrf	13	;volatile
  2292                           
  2293                           ;config.c: 39: PORTC=0X00;
  2294  030F  018E               	clrf	14	;volatile
  2295                           
  2296                           ;config.c: 41: LATA=0X00;
  2297  0310  0196               	clrf	22	;volatile
  2298                           
  2299                           ;config.c: 42: LATB=0X00;
  2300  0311  0197               	clrf	23	;volatile
  2301                           
  2302                           ;config.c: 43: LATC=0X00;
  2303  0312  0198               	clrf	24	;volatile
  2304                           
  2305                           ;config.c: 45: ANSELA=0X00;
  2306  0313  003E               	movlb	30	; select bank30
  2307  0314  01B8               	clrf	56	;volatile
  2308                           
  2309                           ;config.c: 46: ANSELB=0X00;
  2310  0315  01C3               	clrf	67	;volatile
  2311                           
  2312                           ;config.c: 47: ANSELC=0X00;
  2313  0316  01CE               	clrf	78	;volatile
  2314                           
  2315                           ;config.c: 52: TRISBbits.TRISB0=1;
  2316  0317  0020               	movlb	0	; select bank0
  2317  0318  1412               	bsf	18,0	;volatile
  2318                           
  2319                           ;config.c: 53: TRISBbits.TRISB1=1;
  2320  0319  1492               	bsf	18,1	;volatile
  2321                           
  2322                           ;config.c: 54: TRISBbits.TRISB2=1;
  2323  031A  1512               	bsf	18,2	;volatile
  2324                           
  2325                           ;config.c: 55: TRISBbits.TRISB3=1;
  2326  031B  1592               	bsf	18,3	;volatile
  2327  031C  0008               	return
  2328  031D                     __end_of_initial_config:	
  2329                           
  2330                           	psect	text5
  2331  0330                     __ptext5:	
  2332 ;; *************** function _init_int *****************
  2333 ;; Defined at:
  2334 ;;		line 13 in file "config.c"
  2335 ;; Parameters:    Size  Location     Type
  2336 ;;		None
  2337 ;; Auto vars:     Size  Location     Type
  2338 ;;		None
  2339 ;; Return value:  Size  Location     Type
  2340 ;;                  1    wreg      void 
  2341 ;; Registers used:
  2342 ;;		wreg, status,2
  2343 ;; Tracked objects:
  2344 ;;		On entry : 0/0
  2345 ;;		On exit  : 0/0
  2346 ;;		Unchanged: 0/0
  2347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2348 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2349 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2351 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2352 ;;Total ram usage:        0 bytes
  2353 ;; Hardware stack levels used:    1
  2354 ;; Hardware stack levels required when called:    1
  2355 ;; This function calls:
  2356 ;;		Nothing
  2357 ;; This function is called by:
  2358 ;;		_main
  2359 ;; This function uses a non-reentrant model
  2360 ;;
  2361                           
  2362                           
  2363                           ;psect for function _init_int
  2364  0330                     _init_int:	
  2365                           
  2366                           ;config.c: 18: T0CON0=0b00000000;
  2367                           
  2368                           ;incstack = 0
  2369                           ; Regs used in _init_int: [wreg+status,2]
  2370  0330  0020               	movlb	0	; select bank0
  2371  0331  019E               	clrf	30	;volatile
  2372                           
  2373                           ;config.c: 19: T0CON1=0b01001111;
  2374  0332  304F               	movlw	79
  2375  0333  009F               	movwf	31	;volatile
  2376                           
  2377                           ;config.c: 21: T0CON0bits.T0EN=0;
  2378  0334  139E               	bcf	30,7	;volatile
  2379                           
  2380                           ;config.c: 22: TMR0L=0X00;
  2381  0335  019C               	clrf	28	;volatile
  2382                           
  2383                           ;config.c: 23: TMR0H=0Xf4;
  2384  0336  30F4               	movlw	244
  2385  0337  009D               	movwf	29	;volatile
  2386                           
  2387                           ;config.c: 25: INTCONbits.GIE=1;
  2388  0338  178B               	bsf	11,7	;volatile
  2389                           
  2390                           ;config.c: 26: PIE0bits.TMR0IE=1;
  2391  0339  002E               	movlb	14	; select bank14
  2392  033A  1696               	bsf	22,5	;volatile
  2393                           
  2394                           ;config.c: 28: T0CON0bits.T0EN=1;
  2395  033B  0020               	movlb	0	; select bank0
  2396  033C  179E               	bsf	30,7	;volatile
  2397  033D  0008               	return
  2398  033E                     __end_of_init_int:	
  2399                           
  2400                           	psect	text6
  2401  02C1                     __ptext6:	
  2402 ;; *************** function _Lcd_Write_String *****************
  2403 ;; Defined at:
  2404 ;;		line 102 in file "lcd.h"
  2405 ;; Parameters:    Size  Location     Type
  2406 ;;  a               2    6[COMMON] PTR unsigned char 
  2407 ;;		 -> STR_7(9), STR_6(9), STR_5(8), STR_4(9), 
  2408 ;;		 -> STR_3(12), buffer(5), STR_1(12), 
  2409 ;; Auto vars:     Size  Location     Type
  2410 ;;  i               2    9[COMMON] int 
  2411 ;; Return value:  Size  Location     Type
  2412 ;;                  1    wreg      void 
  2413 ;; Registers used:
  2414 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2415 ;; Tracked objects:
  2416 ;;		On entry : 0/0
  2417 ;;		On exit  : 0/0
  2418 ;;		Unchanged: 0/0
  2419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2420 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2421 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2422 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2423 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2424 ;;Total ram usage:        5 bytes
  2425 ;; Hardware stack levels used:    1
  2426 ;; Hardware stack levels required when called:    3
  2427 ;; This function calls:
  2428 ;;		_Lcd_Write_Char
  2429 ;; This function is called by:
  2430 ;;		_main
  2431 ;; This function uses a non-reentrant model
  2432 ;;
  2433                           
  2434                           
  2435                           ;psect for function _Lcd_Write_String
  2436  02C1                     _Lcd_Write_String:	
  2437                           
  2438                           ;lcd.h: 104: int i;
  2439                           ;lcd.h: 105: for(i=0;a[i]!='\0';i++)
  2440                           
  2441                           ;incstack = 0
  2442                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2443  02C1  01F9               	clrf	Lcd_Write_String@i
  2444  02C2  01FA               	clrf	Lcd_Write_String@i+1
  2445  02C3                     l1074:	
  2446  02C3  0876               	movf	Lcd_Write_String@a,w
  2447  02C4  0779               	addwf	Lcd_Write_String@i,w
  2448  02C5  0084               	movwf	4
  2449  02C6  0877               	movf	Lcd_Write_String@a+1,w
  2450  02C7  3D7A               	addwfc	Lcd_Write_String@i+1,w
  2451  02C8  0085               	movwf	5
  2452  02C9  0012               	moviw fsr0++
  2453  02CA  1903               	btfsc	3,2
  2454  02CB  0008               	return
  2455                           
  2456                           ;lcd.h: 106: Lcd_Write_Char(a[i]);
  2457  02CC  0876               	movf	Lcd_Write_String@a,w
  2458  02CD  0779               	addwf	Lcd_Write_String@i,w
  2459  02CE  0084               	movwf	4
  2460  02CF  0877               	movf	Lcd_Write_String@a+1,w
  2461  02D0  3D7A               	addwfc	Lcd_Write_String@i+1,w
  2462  02D1  0085               	movwf	5
  2463  02D2  0800               	movf	0,w	;code access
  2464  02D3  3182  2295  3182   	fcall	_Lcd_Write_Char
  2465  02D6  3001               	movlw	1
  2466  02D7  07F9               	addwf	Lcd_Write_String@i,f
  2467  02D8  3000               	movlw	0
  2468  02D9  3DFA               	addwfc	Lcd_Write_String@i+1,f
  2469  02DA  2AC3               	goto	l1074
  2470  02DB                     __end_of_Lcd_Write_String:	
  2471                           
  2472                           	psect	text7
  2473  0295                     __ptext7:	
  2474 ;; *************** function _Lcd_Write_Char *****************
  2475 ;; Defined at:
  2476 ;;		line 86 in file "lcd.h"
  2477 ;; Parameters:    Size  Location     Type
  2478 ;;  a               1    wreg     unsigned char 
  2479 ;; Auto vars:     Size  Location     Type
  2480 ;;  a               1    5[COMMON] unsigned char 
  2481 ;;  y               1    4[COMMON] unsigned char 
  2482 ;;  temp            1    3[COMMON] unsigned char 
  2483 ;; Return value:  Size  Location     Type
  2484 ;;                  1    wreg      void 
  2485 ;; Registers used:
  2486 ;;		wreg, status,2, status,0, pclath, cstack
  2487 ;; Tracked objects:
  2488 ;;		On entry : 0/0
  2489 ;;		On exit  : 0/0
  2490 ;;		Unchanged: 0/0
  2491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2492 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2493 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2494 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2495 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2496 ;;Total ram usage:        4 bytes
  2497 ;; Hardware stack levels used:    1
  2498 ;; Hardware stack levels required when called:    2
  2499 ;; This function calls:
  2500 ;;		_Lcd_Port
  2501 ;; This function is called by:
  2502 ;;		_Lcd_Write_String
  2503 ;; This function uses a non-reentrant model
  2504 ;;
  2505                           
  2506                           
  2507                           ;psect for function _Lcd_Write_Char
  2508  0295                     _Lcd_Write_Char:	
  2509                           
  2510                           ;incstack = 0
  2511                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2512                           ;Lcd_Write_Char@a stored from wreg
  2513  0295  00F5               	movwf	Lcd_Write_Char@a
  2514                           
  2515                           ;lcd.h: 88: char temp,y;
  2516                           ;lcd.h: 89: temp = a&0x0F;
  2517  0296  0875               	movf	Lcd_Write_Char@a,w
  2518  0297  390F               	andlw	15
  2519  0298  00F2               	movwf	??_Lcd_Write_Char
  2520  0299  0872               	movf	??_Lcd_Write_Char,w
  2521  029A  00F3               	movwf	Lcd_Write_Char@temp
  2522                           
  2523                           ;lcd.h: 90: y = a&0xF0;
  2524  029B  0875               	movf	Lcd_Write_Char@a,w
  2525  029C  39F0               	andlw	240
  2526  029D  00F2               	movwf	??_Lcd_Write_Char
  2527  029E  0872               	movf	??_Lcd_Write_Char,w
  2528  029F  00F4               	movwf	Lcd_Write_Char@y
  2529                           
  2530                           ;lcd.h: 91: RC3 = 1;
  2531  02A0  0020               	movlb	0	; select bank0
  2532  02A1  158E               	bsf	14,3	;volatile
  2533                           
  2534                           ;lcd.h: 92: Lcd_Port(y>>4);
  2535  02A2  0874               	movf	Lcd_Write_Char@y,w
  2536  02A3  00F2               	movwf	??_Lcd_Write_Char
  2537  02A4  3004               	movlw	4
  2538  02A5                     u385:	
  2539  02A5  36F2               	lsrf	??_Lcd_Write_Char,f
  2540  02A6  0B89               	decfsz	9,f
  2541  02A7  2AA5               	goto	u385
  2542  02A8  0872               	movf	??_Lcd_Write_Char,w
  2543  02A9  3182  22DB  3182   	fcall	_Lcd_Port
  2544                           
  2545                           ;lcd.h: 93: RC4 = 1;
  2546  02AC  0020               	movlb	0	; select bank0
  2547  02AD  160E               	bsf	14,4	;volatile
  2548                           
  2549                           ;lcd.h: 94: _delay((unsigned long)((40)*(32000000/4000000.0)));
  2550  02AE  306A               	movlw	106
  2551  02AF                     u707:	
  2552  02AF  0B89               	decfsz	9,f
  2553  02B0  2AAF               	goto	u707
  2554  02B1  3200               	nop2
  2555                           
  2556                           ;lcd.h: 95: RC4 = 0;
  2557  02B2  0020               	movlb	0	; select bank0
  2558  02B3  120E               	bcf	14,4	;volatile
  2559                           
  2560                           ;lcd.h: 96: Lcd_Port(temp);
  2561  02B4  0873               	movf	Lcd_Write_Char@temp,w
  2562  02B5  3182  22DB  3182   	fcall	_Lcd_Port
  2563                           
  2564                           ;lcd.h: 97: RC4 = 1;
  2565  02B8  0020               	movlb	0	; select bank0
  2566  02B9  160E               	bsf	14,4	;volatile
  2567                           
  2568                           ;lcd.h: 98: _delay((unsigned long)((40)*(32000000/4000000.0)));
  2569  02BA  306A               	movlw	106
  2570  02BB                     u717:	
  2571  02BB  0B89               	decfsz	9,f
  2572  02BC  2ABB               	goto	u717
  2573  02BD  3200               	nop2
  2574                           
  2575                           ;lcd.h: 99: RC4 = 0;
  2576  02BE  0020               	movlb	0	; select bank0
  2577  02BF  120E               	bcf	14,4	;volatile
  2578  02C0  0008               	return
  2579  02C1                     __end_of_Lcd_Write_Char:	
  2580                           
  2581                           	psect	text8
  2582  01F4                     __ptext8:	
  2583 ;; *************** function _Lcd_Set_Cursor *****************
  2584 ;; Defined at:
  2585 ;;		line 46 in file "lcd.h"
  2586 ;; Parameters:    Size  Location     Type
  2587 ;;  a               1    wreg     unsigned char 
  2588 ;;  b               1    4[COMMON] unsigned char 
  2589 ;; Auto vars:     Size  Location     Type
  2590 ;;  a               1    7[COMMON] unsigned char 
  2591 ;;  temp            1   10[COMMON] unsigned char 
  2592 ;;  y               1    9[COMMON] unsigned char 
  2593 ;;  z               1    8[COMMON] unsigned char 
  2594 ;; Return value:  Size  Location     Type
  2595 ;;                  1    wreg      void 
  2596 ;; Registers used:
  2597 ;;		wreg, status,2, status,0, pclath, cstack
  2598 ;; Tracked objects:
  2599 ;;		On entry : 0/0
  2600 ;;		On exit  : 0/0
  2601 ;;		Unchanged: 0/0
  2602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2603 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2604 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2605 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2606 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2607 ;;Total ram usage:        7 bytes
  2608 ;; Hardware stack levels used:    1
  2609 ;; Hardware stack levels required when called:    3
  2610 ;; This function calls:
  2611 ;;		_Lcd_Cmd
  2612 ;; This function is called by:
  2613 ;;		_main
  2614 ;; This function uses a non-reentrant model
  2615 ;;
  2616                           
  2617                           
  2618                           ;psect for function _Lcd_Set_Cursor
  2619  01F4                     _Lcd_Set_Cursor:	
  2620                           
  2621                           ;incstack = 0
  2622                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2623                           ;Lcd_Set_Cursor@a stored from wreg
  2624  01F4  00F7               	movwf	Lcd_Set_Cursor@a
  2625                           
  2626                           ;lcd.h: 48: char temp,z,y;
  2627                           ;lcd.h: 49: if(a == 1)
  2628  01F5  0377               	decf	Lcd_Set_Cursor@a,w
  2629  01F6  1D03               	btfss	3,2
  2630  01F7  2A14               	goto	l1048
  2631                           
  2632                           ;lcd.h: 50: {
  2633                           ;lcd.h: 51: temp = 0x80 + b - 1;
  2634  01F8  0874               	movf	Lcd_Set_Cursor@b,w
  2635  01F9  3E7F               	addlw	127
  2636  01FA  00F5               	movwf	??_Lcd_Set_Cursor
  2637  01FB  0875               	movf	??_Lcd_Set_Cursor,w
  2638  01FC  00FA               	movwf	Lcd_Set_Cursor@temp
  2639                           
  2640                           ;lcd.h: 52: z = temp>>4;
  2641  01FD  087A               	movf	Lcd_Set_Cursor@temp,w
  2642  01FE  00F5               	movwf	??_Lcd_Set_Cursor
  2643  01FF  3004               	movlw	4
  2644  0200                     u535:	
  2645  0200  36F5               	lsrf	??_Lcd_Set_Cursor,f
  2646  0201  0B89               	decfsz	9,f
  2647  0202  2A00               	goto	u535
  2648  0203  0875               	movf	??_Lcd_Set_Cursor,w
  2649  0204  00F6               	movwf	??_Lcd_Set_Cursor+1
  2650  0205  0876               	movf	??_Lcd_Set_Cursor+1,w
  2651  0206  00F8               	movwf	Lcd_Set_Cursor@z
  2652                           
  2653                           ;lcd.h: 53: y = temp & 0x0F;
  2654  0207  087A               	movf	Lcd_Set_Cursor@temp,w
  2655  0208  390F               	andlw	15
  2656  0209  00F5               	movwf	??_Lcd_Set_Cursor
  2657  020A  0875               	movf	??_Lcd_Set_Cursor,w
  2658  020B  00F9               	movwf	Lcd_Set_Cursor@y
  2659                           
  2660                           ;lcd.h: 54: Lcd_Cmd(z);
  2661  020C  0878               	movf	Lcd_Set_Cursor@z,w
  2662  020D  3183  231D  3181   	fcall	_Lcd_Cmd
  2663                           
  2664                           ;lcd.h: 55: Lcd_Cmd(y);
  2665  0210  0879               	movf	Lcd_Set_Cursor@y,w
  2666  0211  3183  231D         	fcall	_Lcd_Cmd
  2667                           
  2668                           ;lcd.h: 56: }
  2669  0213  0008               	return
  2670  0214                     l1048:	
  2671                           
  2672                           ;lcd.h: 57: else if(a == 2)
  2673  0214  3002               	movlw	2
  2674  0215  0677               	xorwf	Lcd_Set_Cursor@a,w
  2675  0216  1D03               	btfss	3,2
  2676  0217  0008               	return
  2677                           
  2678                           ;lcd.h: 58: {
  2679                           ;lcd.h: 59: temp = 0xC0 + b - 1;
  2680  0218  0874               	movf	Lcd_Set_Cursor@b,w
  2681  0219  3EBF               	addlw	191
  2682  021A  00F5               	movwf	??_Lcd_Set_Cursor
  2683  021B  0875               	movf	??_Lcd_Set_Cursor,w
  2684  021C  00FA               	movwf	Lcd_Set_Cursor@temp
  2685                           
  2686                           ;lcd.h: 60: z = temp>>4;
  2687  021D  087A               	movf	Lcd_Set_Cursor@temp,w
  2688  021E  00F5               	movwf	??_Lcd_Set_Cursor
  2689  021F  3004               	movlw	4
  2690  0220                     u555:	
  2691  0220  36F5               	lsrf	??_Lcd_Set_Cursor,f
  2692  0221  0B89               	decfsz	9,f
  2693  0222  2A20               	goto	u555
  2694  0223  0875               	movf	??_Lcd_Set_Cursor,w
  2695  0224  00F6               	movwf	??_Lcd_Set_Cursor+1
  2696  0225  0876               	movf	??_Lcd_Set_Cursor+1,w
  2697  0226  00F8               	movwf	Lcd_Set_Cursor@z
  2698                           
  2699                           ;lcd.h: 61: y = temp & 0x0F;
  2700  0227  087A               	movf	Lcd_Set_Cursor@temp,w
  2701  0228  390F               	andlw	15
  2702  0229  00F5               	movwf	??_Lcd_Set_Cursor
  2703  022A  0875               	movf	??_Lcd_Set_Cursor,w
  2704  022B  00F9               	movwf	Lcd_Set_Cursor@y
  2705                           
  2706                           ;lcd.h: 62: Lcd_Cmd(z);
  2707  022C  0878               	movf	Lcd_Set_Cursor@z,w
  2708  022D  3183  231D  3181   	fcall	_Lcd_Cmd
  2709                           
  2710                           ;lcd.h: 63: Lcd_Cmd(y);
  2711  0230  0879               	movf	Lcd_Set_Cursor@y,w
  2712  0231  3183  231D         	fcall	_Lcd_Cmd
  2713  0233  0008               	return
  2714  0234                     __end_of_Lcd_Set_Cursor:	
  2715                           
  2716                           	psect	text9
  2717  01B3                     __ptext9:	
  2718 ;; *************** function _Lcd_Init *****************
  2719 ;; Defined at:
  2720 ;;		line 67 in file "lcd.h"
  2721 ;; Parameters:    Size  Location     Type
  2722 ;;		None
  2723 ;; Auto vars:     Size  Location     Type
  2724 ;;		None
  2725 ;; Return value:  Size  Location     Type
  2726 ;;                  1    wreg      void 
  2727 ;; Registers used:
  2728 ;;		wreg, status,2, status,0, pclath, cstack
  2729 ;; Tracked objects:
  2730 ;;		On entry : 0/0
  2731 ;;		On exit  : 0/0
  2732 ;;		Unchanged: 0/0
  2733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2734 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2736 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2737 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2738 ;;Total ram usage:        1 bytes
  2739 ;; Hardware stack levels used:    1
  2740 ;; Hardware stack levels required when called:    3
  2741 ;; This function calls:
  2742 ;;		_Lcd_Cmd
  2743 ;;		_Lcd_Port
  2744 ;; This function is called by:
  2745 ;;		_main
  2746 ;; This function uses a non-reentrant model
  2747 ;;
  2748                           
  2749                           
  2750                           ;psect for function _Lcd_Init
  2751  01B3                     _Lcd_Init:	
  2752                           
  2753                           ;lcd.h: 69: Lcd_Port(0x00);
  2754                           
  2755                           ;incstack = 0
  2756                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2757  01B3  3000               	movlw	0
  2758  01B4  3182  22DB  3181   	fcall	_Lcd_Port
  2759                           
  2760                           ;lcd.h: 70: _delay((unsigned long)((20)*(32000000/4000.0)));
  2761  01B7  30D0               	movlw	208
  2762  01B8  00F4               	movwf	??_Lcd_Init
  2763  01B9  30CA               	movlw	202
  2764  01BA                     u727:	
  2765  01BA  0B89               	decfsz	9,f
  2766  01BB  29BA               	goto	u727
  2767  01BC  0BF4               	decfsz	??_Lcd_Init,f
  2768  01BD  29BA               	goto	u727
  2769                           
  2770                           ;lcd.h: 71: Lcd_Cmd(0x03);
  2771  01BE  3003               	movlw	3
  2772  01BF  3183  231D  3181   	fcall	_Lcd_Cmd
  2773                           
  2774                           ;lcd.h: 72: _delay((unsigned long)((5)*(32000000/4000.0)));
  2775  01C2  3034               	movlw	52
  2776  01C3  00F4               	movwf	??_Lcd_Init
  2777  01C4  30F2               	movlw	242
  2778  01C5                     u737:	
  2779  01C5  0B89               	decfsz	9,f
  2780  01C6  29C5               	goto	u737
  2781  01C7  0BF4               	decfsz	??_Lcd_Init,f
  2782  01C8  29C5               	goto	u737
  2783                           
  2784                           ;lcd.h: 73: Lcd_Cmd(0x03);
  2785  01C9  3003               	movlw	3
  2786  01CA  3183  231D  3181   	fcall	_Lcd_Cmd
  2787                           
  2788                           ;lcd.h: 74: _delay((unsigned long)((11)*(32000000/4000.0)));
  2789  01CD  3073               	movlw	115
  2790  01CE  00F4               	movwf	??_Lcd_Init
  2791  01CF  3048               	movlw	72
  2792  01D0                     u747:	
  2793  01D0  0B89               	decfsz	9,f
  2794  01D1  29D0               	goto	u747
  2795  01D2  0BF4               	decfsz	??_Lcd_Init,f
  2796  01D3  29D0               	goto	u747
  2797                           
  2798                           ;lcd.h: 75: Lcd_Cmd(0x03);
  2799  01D4  3003               	movlw	3
  2800  01D5  3183  231D  3181   	fcall	_Lcd_Cmd
  2801                           
  2802                           ;lcd.h: 77: Lcd_Cmd(0x02);
  2803  01D8  3002               	movlw	2
  2804  01D9  3183  231D  3181   	fcall	_Lcd_Cmd
  2805                           
  2806                           ;lcd.h: 78: Lcd_Cmd(0x02);
  2807  01DC  3002               	movlw	2
  2808  01DD  3183  231D  3181   	fcall	_Lcd_Cmd
  2809                           
  2810                           ;lcd.h: 79: Lcd_Cmd(0x08);
  2811  01E0  3008               	movlw	8
  2812  01E1  3183  231D  3181   	fcall	_Lcd_Cmd
  2813                           
  2814                           ;lcd.h: 80: Lcd_Cmd(0x00);
  2815  01E4  3000               	movlw	0
  2816  01E5  3183  231D  3181   	fcall	_Lcd_Cmd
  2817                           
  2818                           ;lcd.h: 81: Lcd_Cmd(0x0C);
  2819  01E8  300C               	movlw	12
  2820  01E9  3183  231D  3181   	fcall	_Lcd_Cmd
  2821                           
  2822                           ;lcd.h: 82: Lcd_Cmd(0x00);
  2823  01EC  3000               	movlw	0
  2824  01ED  3183  231D  3181   	fcall	_Lcd_Cmd
  2825                           
  2826                           ;lcd.h: 83: Lcd_Cmd(0x06);
  2827  01F0  3006               	movlw	6
  2828  01F1  3183  231D         	fcall	_Lcd_Cmd
  2829  01F3  0008               	return
  2830  01F4                     __end_of_Lcd_Init:	
  2831                           
  2832                           	psect	text10
  2833  035B                     __ptext10:	
  2834 ;; *************** function _Lcd_Clear *****************
  2835 ;; Defined at:
  2836 ;;		line 40 in file "lcd.h"
  2837 ;; Parameters:    Size  Location     Type
  2838 ;;		None
  2839 ;; Auto vars:     Size  Location     Type
  2840 ;;		None
  2841 ;; Return value:  Size  Location     Type
  2842 ;;                  2   50[None  ] int 
  2843 ;; Registers used:
  2844 ;;		wreg, status,2, status,0, pclath, cstack
  2845 ;; Tracked objects:
  2846 ;;		On entry : 0/0
  2847 ;;		On exit  : 0/0
  2848 ;;		Unchanged: 0/0
  2849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2850 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2851 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2853 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2854 ;;Total ram usage:        0 bytes
  2855 ;; Hardware stack levels used:    1
  2856 ;; Hardware stack levels required when called:    3
  2857 ;; This function calls:
  2858 ;;		_Lcd_Cmd
  2859 ;; This function is called by:
  2860 ;;		_main
  2861 ;; This function uses a non-reentrant model
  2862 ;;
  2863                           
  2864                           
  2865                           ;psect for function _Lcd_Clear
  2866  035B                     _Lcd_Clear:	
  2867                           
  2868                           ;lcd.h: 42: Lcd_Cmd(0);
  2869                           
  2870                           ;incstack = 0
  2871                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  2872  035B  3000               	movlw	0
  2873  035C  3183  231D  3183   	fcall	_Lcd_Cmd
  2874                           
  2875                           ;lcd.h: 43: Lcd_Cmd(1);
  2876  035F  3001               	movlw	1
  2877  0360  3183  231D         	fcall	_Lcd_Cmd
  2878  0362  0008               	return
  2879  0363                     __end_of_Lcd_Clear:	
  2880                           
  2881                           	psect	text11
  2882  031D                     __ptext11:	
  2883 ;; *************** function _Lcd_Cmd *****************
  2884 ;; Defined at:
  2885 ;;		line 31 in file "lcd.h"
  2886 ;; Parameters:    Size  Location     Type
  2887 ;;  a               1    wreg     unsigned char 
  2888 ;; Auto vars:     Size  Location     Type
  2889 ;;  a               1    3[COMMON] unsigned char 
  2890 ;; Return value:  Size  Location     Type
  2891 ;;                  1    wreg      void 
  2892 ;; Registers used:
  2893 ;;		wreg, status,2, status,0, pclath, cstack
  2894 ;; Tracked objects:
  2895 ;;		On entry : 0/0
  2896 ;;		On exit  : 0/0
  2897 ;;		Unchanged: 0/0
  2898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2900 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2901 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2902 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2903 ;;Total ram usage:        2 bytes
  2904 ;; Hardware stack levels used:    1
  2905 ;; Hardware stack levels required when called:    2
  2906 ;; This function calls:
  2907 ;;		_Lcd_Port
  2908 ;; This function is called by:
  2909 ;;		_Lcd_Clear
  2910 ;;		_Lcd_Set_Cursor
  2911 ;;		_Lcd_Init
  2912 ;;		_Lcd_Shift_Right
  2913 ;;		_Lcd_Shift_Left
  2914 ;; This function uses a non-reentrant model
  2915 ;;
  2916                           
  2917                           
  2918                           ;psect for function _Lcd_Cmd
  2919  031D                     _Lcd_Cmd:	
  2920                           
  2921                           ;incstack = 0
  2922                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2923                           ;Lcd_Cmd@a stored from wreg
  2924  031D  00F3               	movwf	Lcd_Cmd@a
  2925                           
  2926                           ;lcd.h: 33: RC3 = 0;
  2927  031E  0020               	movlb	0	; select bank0
  2928  031F  118E               	bcf	14,3	;volatile
  2929                           
  2930                           ;lcd.h: 34: Lcd_Port(a);
  2931  0320  0873               	movf	Lcd_Cmd@a,w
  2932  0321  3182  22DB  3183   	fcall	_Lcd_Port
  2933                           
  2934                           ;lcd.h: 35: RC4 = 1;
  2935  0324  0020               	movlb	0	; select bank0
  2936  0325  160E               	bsf	14,4	;volatile
  2937                           
  2938                           ;lcd.h: 36: _delay((unsigned long)((4)*(32000000/4000.0)));
  2939  0326  302A               	movlw	42
  2940  0327  00F2               	movwf	??_Lcd_Cmd
  2941  0328  308E               	movlw	142
  2942  0329                     u757:	
  2943  0329  0B89               	decfsz	9,f
  2944  032A  2B29               	goto	u757
  2945  032B  0BF2               	decfsz	??_Lcd_Cmd,f
  2946  032C  2B29               	goto	u757
  2947                           
  2948                           ;lcd.h: 37: RC4 = 0;
  2949  032D  0020               	movlb	0	; select bank0
  2950  032E  120E               	bcf	14,4	;volatile
  2951  032F  0008               	return
  2952  0330                     __end_of_Lcd_Cmd:	
  2953                           
  2954                           	psect	text12
  2955  02DB                     __ptext12:	
  2956 ;; *************** function _Lcd_Port *****************
  2957 ;; Defined at:
  2958 ;;		line 9 in file "lcd.h"
  2959 ;; Parameters:    Size  Location     Type
  2960 ;;  a               1    wreg     unsigned char 
  2961 ;; Auto vars:     Size  Location     Type
  2962 ;;  a               1    1[COMMON] unsigned char 
  2963 ;; Return value:  Size  Location     Type
  2964 ;;                  1    wreg      void 
  2965 ;; Registers used:
  2966 ;;		wreg
  2967 ;; Tracked objects:
  2968 ;;		On entry : 0/0
  2969 ;;		On exit  : 0/0
  2970 ;;		Unchanged: 0/0
  2971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2973 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2975 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2976 ;;Total ram usage:        1 bytes
  2977 ;; Hardware stack levels used:    1
  2978 ;; Hardware stack levels required when called:    1
  2979 ;; This function calls:
  2980 ;;		Nothing
  2981 ;; This function is called by:
  2982 ;;		_Lcd_Cmd
  2983 ;;		_Lcd_Init
  2984 ;;		_Lcd_Write_Char
  2985 ;; This function uses a non-reentrant model
  2986 ;;
  2987                           
  2988                           
  2989                           ;psect for function _Lcd_Port
  2990  02DB                     _Lcd_Port:	
  2991                           
  2992                           ;incstack = 0
  2993                           ; Regs used in _Lcd_Port: [wreg]
  2994                           ;Lcd_Port@a stored from wreg
  2995  02DB  00F1               	movwf	Lcd_Port@a
  2996                           
  2997                           ;lcd.h: 11: if(a & 1)
  2998  02DC  1C71               	btfss	Lcd_Port@a,0
  2999  02DD  2AE1               	goto	l37
  3000                           
  3001                           ;lcd.h: 12: RC5 = 1;
  3002  02DE  0020               	movlb	0	; select bank0
  3003  02DF  168E               	bsf	14,5	;volatile
  3004  02E0  2AE3               	goto	l946
  3005  02E1                     l37:	
  3006                           
  3007                           ;lcd.h: 13: else
  3008                           ;lcd.h: 14: RC5 = 0;
  3009  02E1  0020               	movlb	0	; select bank0
  3010  02E2  128E               	bcf	14,5	;volatile
  3011  02E3                     l946:	
  3012                           
  3013                           ;lcd.h: 16: if(a & 2)
  3014  02E3  1CF1               	btfss	Lcd_Port@a,1
  3015  02E4  2AE7               	goto	l39
  3016                           
  3017                           ;lcd.h: 17: RC6 = 1;
  3018  02E5  170E               	bsf	14,6	;volatile
  3019  02E6  2AE8               	goto	l950
  3020  02E7                     l39:	
  3021                           
  3022                           ;lcd.h: 18: else
  3023                           ;lcd.h: 19: RC6 = 0;
  3024  02E7  130E               	bcf	14,6	;volatile
  3025  02E8                     l950:	
  3026                           
  3027                           ;lcd.h: 21: if(a & 4)
  3028  02E8  1D71               	btfss	Lcd_Port@a,2
  3029  02E9  2AEC               	goto	l41
  3030                           
  3031                           ;lcd.h: 22: RC2 = 1;
  3032  02EA  150E               	bsf	14,2	;volatile
  3033  02EB  2AED               	goto	l954
  3034  02EC                     l41:	
  3035                           
  3036                           ;lcd.h: 23: else
  3037                           ;lcd.h: 24: RC2 = 0;
  3038  02EC  110E               	bcf	14,2	;volatile
  3039  02ED                     l954:	
  3040                           
  3041                           ;lcd.h: 26: if(a & 8)
  3042  02ED  1DF1               	btfss	Lcd_Port@a,3
  3043  02EE  2AF1               	goto	l43
  3044                           
  3045                           ;lcd.h: 27: RC7 = 1;
  3046  02EF  178E               	bsf	14,7	;volatile
  3047  02F0  0008               	return
  3048  02F1                     l43:	
  3049                           
  3050                           ;lcd.h: 28: else
  3051                           ;lcd.h: 29: RC7 = 0;
  3052  02F1  138E               	bcf	14,7	;volatile
  3053  02F2  0008               	return
  3054  02F3                     __end_of_Lcd_Port:	
  3055                           
  3056                           	psect	intentry
  3057  0004                     __pintentry:	
  3058 ;; *************** function _timer *****************
  3059 ;; Defined at:
  3060 ;;		line 82 in file "main.c"
  3061 ;; Parameters:    Size  Location     Type
  3062 ;;		None
  3063 ;; Auto vars:     Size  Location     Type
  3064 ;;		None
  3065 ;; Return value:  Size  Location     Type
  3066 ;;                  1    wreg      void 
  3067 ;; Registers used:
  3068 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3069 ;; Tracked objects:
  3070 ;;		On entry : 0/0
  3071 ;;		On exit  : 0/0
  3072 ;;		Unchanged: 0/0
  3073 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3074 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3075 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3076 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3077 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3078 ;;Total ram usage:        1 bytes
  3079 ;; Hardware stack levels used:    1
  3080 ;; This function calls:
  3081 ;;		Nothing
  3082 ;; This function is called by:
  3083 ;;		Interrupt level 1
  3084 ;; This function uses a non-reentrant model
  3085 ;;
  3086                           
  3087  0004                     _timer:	
  3088                           
  3089                           ;incstack = 0
  3090  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  3091                           
  3092                           ; Regs used in _timer: [wreg-fsr0h+status,2+status,0]
  3093  0005  3180               	pagesel	$
  3094  0006  0020               	movlb	0	; select bank0
  3095  0007  087F               	movf	127,w
  3096  0008  00F0               	movwf	??_timer
  3097                           
  3098                           ;main.c: 84: PIR0bits.TMR0IF=0;
  3099  0009  002E               	movlb	14	; select bank14
  3100  000A  128C               	bcf	12,5	;volatile
  3101                           
  3102                           ;main.c: 85: T0CON0bits.T0EN=0;
  3103  000B  0020               	movlb	0	; select bank0
  3104  000C  139E               	bcf	30,7	;volatile
  3105                           
  3106                           ;main.c: 87: switch (flag)
  3107  000D  2818               	goto	i1l1224
  3108  000E                     i1l95:	
  3109                           ;main.c: 88: {
  3110                           ;main.c: 89: case 0:
  3111                           
  3112                           
  3113                           ;main.c: 90: LATAbits.LATA5=1;
  3114  000E  1696               	bsf	22,5	;volatile
  3115                           
  3116                           ;main.c: 91: flag=1;
  3117  000F  3001               	movlw	1
  3118  0010  00B5               	movwf	_flag
  3119  0011  3000               	movlw	0
  3120  0012  00B6               	movwf	_flag+1
  3121                           
  3122                           ;main.c: 92: break;
  3123  0013  2825               	goto	i1l1226
  3124  0014                     i1l97:	
  3125                           ;main.c: 93: case 1:
  3126                           
  3127                           
  3128                           ;main.c: 94: LATAbits.LATA5=0;
  3129  0014  1296               	bcf	22,5	;volatile
  3130                           
  3131                           ;main.c: 95: flag=0;
  3132  0015  01B5               	clrf	_flag
  3133  0016  01B6               	clrf	_flag+1
  3134                           
  3135                           ;main.c: 97: }
  3136                           
  3137                           ;main.c: 96: break;
  3138  0017  2825               	goto	i1l1226
  3139  0018                     i1l1224:	
  3140                           
  3141                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3142                           ; Switch size 1, requested type "space"
  3143                           ; Number of cases is 1, Range of values is 0 to 0
  3144                           ; switch strategies available:
  3145                           ; Name         Instructions Cycles
  3146                           ; simple_byte            4     3 (average)
  3147                           ; direct_byte            8     6 (fixed)
  3148                           ; jumptable            260     6 (fixed)
  3149                           ;	Chosen strategy is simple_byte
  3150  0018  0836               	movf	_flag+1,w
  3151  0019  3A00               	xorlw	0	; case 0
  3152  001A  1903               	skipnz
  3153  001B  281D               	goto	i1l1254
  3154  001C  2825               	goto	i1l1226
  3155  001D                     i1l1254:	
  3156                           
  3157                           ; Switch size 1, requested type "space"
  3158                           ; Number of cases is 2, Range of values is 0 to 1
  3159                           ; switch strategies available:
  3160                           ; Name         Instructions Cycles
  3161                           ; simple_byte            7     4 (average)
  3162                           ; direct_byte           10     6 (fixed)
  3163                           ; jumptable            260     6 (fixed)
  3164                           ;	Chosen strategy is simple_byte
  3165  001D  0835               	movf	_flag,w
  3166  001E  3A00               	xorlw	0	; case 0
  3167  001F  1903               	skipnz
  3168  0020  280E               	goto	i1l95
  3169  0021  3A01               	xorlw	1	; case 1
  3170  0022  1903               	skipnz
  3171  0023  2814               	goto	i1l97
  3172  0024  2825               	goto	i1l1226
  3173  0025                     i1l1226:	
  3174                           
  3175                           ;main.c: 99: TMR0L=0X00;
  3176  0025  019C               	clrf	28	;volatile
  3177                           
  3178                           ;main.c: 100: T0CON0bits.T0EN=1;
  3179  0026  179E               	bsf	30,7	;volatile
  3180  0027  0870               	movf	??_timer,w
  3181  0028  00FF               	movwf	127
  3182  0029  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  3183  002A  0009               	retfie
  3184  002B                     __end_of_timer:	
  3185  007E                     btemp	set	126	;btemp
  3186  007E                     int$flags	set	126
  3187  007E                     wtemp0	set	126


Data Sizes:
    Strings     44
    Constant    10
    Data        0
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80     21      28
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_2(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 5
		 -> buffer(BANK0[5]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 12
		 -> STR_7(CODE[9]), STR_6(CODE[9]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[12]), buffer(BANK0[5]), STR_1(CODE[12]), 


Critical Paths under _main in COMMON

    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _timer in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___lwmod

Critical Paths under _timer in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _timer in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _timer in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _timer in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _timer in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _timer in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _timer in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _timer in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _timer in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _timer in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _timer in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _timer in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _timer in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    2812
                                             17 BANK0      4     4      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                           _init_int
                     _initial_config
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             23    19      4    1090
                                              2 BANK0     15    11      4
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     265
                                              9 COMMON     4     0      4
                                              0 BANK0      2     2      0
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     268
                                              1 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _initial_config                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_int                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     5     3      2     639
                                              6 COMMON     5     3      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                              2 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     751
                                              4 COMMON     7     6      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             1     1      0     198
                                              4 COMMON     1     1      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              2     2      0     110
                                              2 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _timer                                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _init_int
   _initial_config
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 _timer (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     15      1C       5       35.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      29      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      29      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sat May 26 14:05:37 2018

              __CFG_CP$OFF 0000                         l41 02EC                         l43 02F1  
                       l37 02E1                         l39 02E7                __CFG_LVP$ON 0000  
                      l950 02E8                        l954 02ED                        l946 02E3  
                      l998 023C                        _RB2 006A                        _RB3 006B  
                      _RC2 0072                        _RC3 0073                        _RC4 0074  
                      _RC5 0075                        _RC6 0076                        _RC7 0077  
                      u405 023F                        u425 0249                        u505 0288  
             __CFG_CPD$OFF 0000                        u435 0253                        u445 025B  
                      u605 00AA                        u535 0200                        u385 02A5  
                      u555 0220                        u707 02AF                        u475 0272  
                      u717 02BB                        u727 01BA                        u495 0281  
                      u737 01C5                        u747 01D0                        u757 0329  
                      u677 0151                        u687 017E                        u697 01AB  
             __CFG_BORV$LO 0000                        wreg 0009           ??_initial_config 0071  
             __CFG_ZCD$OFF 0000                       l1000 0248                       l1010 0263  
                     l1006 025A                       l1022 026F                       l1024 027B  
                     l1032 0290                       l1130 0095                       l1114 0079  
                     l1028 0287                       l1124 008F                       l1108 0061  
                     l1204 0187                       l1150 00C7                       l1142 00C3  
                     l1048 0214                       l1136 00B4                       l1152 003F  
                     l1074 02C3                       l1154 0101                       l1178 0124  
                     STR_1 033E                       STR_2 0363                       STR_3 02FD  
                     STR_4 0300                       STR_5 0353                       STR_6 0300  
                     STR_7 034A                       _LATA 0016                       _LATB 0017  
                     _LATC 0018                main@counter 0033                       i1l95 000E  
                     i1l97 0014               __CFG_WRT$OFF 0000          ?_Lcd_Write_String 0076  
                     _flag 0035                       _main 0106                       fsr0h 0005  
                     fsr1h 0007                       indf0 0000                       fsr0l 0004  
                     indf1 0001                       fsr1l 0006                       btemp 007E  
                     start 002B         ??_Lcd_Write_String 0078            __end_of_Lcd_Cmd 0330  
            __CFG_MCLRE$ON 0000                      ?_main 0070              __CFG_WDTE$OFF 0000  
          __end_of___lwdiv 0268            __end_of___lwmod 0295                      _TMR0H 001D  
                    _TMR0L 001C                      _PORTA 000C                      _PORTB 000D  
                    _PORTC 000E    __size_of_Lcd_Set_Cursor 0040                      _TRISA 0011  
                    _TRISB 0012                      _TRISC 0013             __CFG_FCMEN$OFF 0000  
          __end_of_dpowers 02FD                      _timer 0004             __CFG_BOREN$OFF 0000  
                    status 0003                      wtemp0 007E            __end_of_sprintf 0106  
         __end_of_Lcd_Init 01F4             __CFG_CSWEN$OFF 0000           __end_of_Lcd_Port 02F3  
          __initialization 002D               __end_of_main 01B3                     ??_main 0031  
       __size_of_Lcd_Clear 0008                     ?_timer 0070                     _ANSELA 0F38  
                   _ANSELB 0F43                     _ANSELC 0F4E                     _T0CON0 001E  
                   _T0CON1 001F                     i1l1224 0018                     i1l1226 0025  
                   i1l1254 001D             __CFG_WDTCCS$SC 0000                  ??_Lcd_Cmd 0072  
  __size_of_Lcd_Write_Char 002C             __CFG_PWRTE$OFF 0000                  ??___lwdiv 0075  
                ??___lwmod 0020                     _buffer 0037           __end_of_init_int 033E  
                ??_sprintf 0026            Lcd_Set_Cursor@a 0077            Lcd_Set_Cursor@b 0074  
          Lcd_Set_Cursor@y 0079            Lcd_Set_Cursor@z 0078    __end_of__initialization 0035  
        __end_of_Lcd_Clear 0363             __pcstackCOMMON 0070              __end_of_timer 002B  
           _Lcd_Set_Cursor 01F4                  ?_Lcd_Init 0070                  ?_Lcd_Port 0070  
                  ??_timer 0070                 __pbssBANK0 0035                 __pmaintext 0106  
               __pintentry 0004  __size_of_Lcd_Write_String 001A     __end_of_Lcd_Set_Cursor 0234  
 __CFG_SCANE$not_available 0000                 ??_Lcd_Init 0074                 ??_Lcd_Port 0071  
           _Lcd_Write_Char 0295                    _Lcd_Cmd 031D                  ?_init_int 0070  
                  ___lwdiv 0234                    ___lwmod 0268            __CFG_STVREN$OFF 0000  
          ?_Lcd_Set_Cursor 0074                    __ptext1 0039                    __ptext2 0268  
                  __ptext3 0234                    __ptext4 0309                    __ptext5 0330  
                  __ptext6 02C1                    __ptext7 0295                    __ptext8 01F4  
                  __ptext9 01B3                    _dpowers 02F3                    _sprintf 0039  
   __end_of_Lcd_Write_Char 02C1       end_of_initialization 0035                 ??_init_int 0071  
  __size_of_initial_config 0014                  Lcd_Port@a 0071      __CFG_WDTCPS$WDTCPS_31 0000  
                _TRISBbits 0012           __CFG_FEXTOSC$ECH 0000            ?_Lcd_Write_Char 0070  
        Lcd_Write_String@a 0076          Lcd_Write_String@i 0079                  _Lcd_Clear 035B  
         _Lcd_Write_String 02C1        start_initialization 002D          __size_of_Lcd_Init 0041  
        __size_of_Lcd_Port 0018           __CFG_LPBOREN$OFF 0000                 ?_Lcd_Clear 0070  
          Lcd_Write_Char@a 0075            Lcd_Write_Char@y 0074                  ___latbits 0002  
            __pcstackBANK0 0020                   ?_Lcd_Cmd 0070                sprintf@flag 002B  
           _initial_config 0309                sprintf@prec 002C          __size_of_init_int 000E  
         ___lwdiv@dividend 0073           ??_Lcd_Set_Cursor 0075                   ?___lwdiv 0071  
                 ?___lwmod 0079           __CFG_PPS1WAY$OFF 0000           ___lwdiv@quotient 0076  
     __CFG_RSTOSC$HFINTPLL 0000                   ?_sprintf 0022             __size_of_timer 0027  
   __end_of_initial_config 031D                   _LATAbits 0016                   _LATCbits 0018  
                 _PIE0bits 0716                   Lcd_Cmd@a 0073                   _PIR0bits 070C  
              ??_Lcd_Clear 0074           ??_Lcd_Write_Char 0072                   _Lcd_Init 01B3  
                 _Lcd_Port 02DB            ?_initial_config 0070   __end_of_Lcd_Write_String 02DB  
         __size_of_Lcd_Cmd 0013           __size_of___lwdiv 0034           __size_of___lwmod 002D  
               sprintf@val 002D                 _T0CON0bits 001E            ___lwdiv@divisor 0071  
          ___lwdiv@counter 0078                   __ptext10 035B                   __ptext11 031D  
                 __ptext12 02DB           __size_of_sprintf 00CD              __size_of_main 00AD  
                 _init_int 0330       __CFG_WDTCWS$WDTCWS_7 0000                   int$flags 007E  
               _INTCONbits 000B         Lcd_Write_Char@temp 0073                   intlevel1 0000  
                sprintf@ap 002A                  sprintf@sp 002F           ___lwmod@dividend 007B  
        __CFG_CLKOUTEN$OFF 0000         Lcd_Set_Cursor@temp 007A              __pstringtext1 02F3  
            __pstringtext2 033E              __pstringtext3 034A              __pstringtext4 0353  
            __pstringtext5 0363              __pstringtext6 0000                   sprintf@c 0030  
                 sprintf@f 0022            ___lwmod@divisor 0079            ___lwmod@counter 0021  
